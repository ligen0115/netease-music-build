{"version":3,"sources":["view/home/components/topBar/index.jsx","utils/request.js","api/song_menu.js","view/home/components/recommend/songList/index.jsx","view/home/components/recommend/index.jsx","api/banner.js","api/singer.js","view/home/components/singer/index.jsx","view/home/components/ranking/index.jsx","api/ranking.js","view/home/index.jsx","redux/actionType.js","redux/index.js","redux/reducers.js","redux/actionCreator.js","view/songMenu/index.jsx","view/singerDetails/index.jsx","api/music.js","utils/myToast.js","view/playMusic/index.jsx","utils/playAnimation.js","view/search/index.jsx","api/search.js","App.js","serviceWorker.js","index.js"],"names":["topBar","state","className","mode","icon","type","onLeftClick","rightContent","key","style","marginRight","onClick","props","history","push","React","Component","withRouter","request","axios","create","baseURL","defaults","transformResponse","data","interceptors","use","config","err","Promise","reject","response","JSON","parse","getDetails","id","method","url","params","getPlaylist","songList","this","getSongList","item","res","setState","result","recommend","document","getElementById","BScroll","click","bounce","top","console","log","map","index","songMenu","src","picUrl","alt","name","Math","ceil","playCount","bannerList","getBanners","banners","autoplay","infinite","beforeChange","from","to","afterChange","display","width","height","imageUrl","verticalAlign","onLoad","window","dispatchEvent","Event","imgHeight","singerType","cat","initial","getSingerDesc","Item","singer","letterIndex","letter","singerList","_index","loadList","undefined","classify","scrollX","scrollY","artists","screen","letterScreen","thumb","Brief","ranking","authorityList","globalList","getRanking","list","slice","forEach","getSongMenu","length","arr","tags","playlist","tracks","coverImgUrl","hasLine","columnNum","renderItem","borderRadius","color","fontSize","marginTop","updateFrequency","tabs","title","sub","home","initialPage","tabBarBackgroundColor","tabBarInactiveTextColor","tabBarActiveTextColor","swipeable","alignItems","justifyContent","backgroundColor","SET_MUC_DATA","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","musicUrl","createStore","action","applyMiddleware","thunk","setMucData","subscribedCount","bgStyle","backgroundImage","show","transform","documentElement","scrollTop","match","songMenuList","e","artId","ar","floor","random","arName","dispatch","even","ref","val","setTimeout","go","leftContent","play","multipleLine","singerDetails","artist","hotSongs","inline","getMusicLyc","myToast","msg","tiem","popup","createElement","innerText","body","append","position","opacity","left","textAlign","zIndex","transition","padding","removeChild","playMusic","isPlay","musicList","musicName","musicAr","playLength","current","end","platPattern","lycArr","currentLyric","isShowLyc","popupShow","isTouchDown","addEventListener","event","x","changedTouches","clientX","progressBox","offsetLeft","setProgress","subscribe","getState","root","ico","pageY","pageX","playAnimation","setMusicUrl","lyric","split","lyricArr","i","timeStr","substring","str","replace","timeArr","j","time","Number","sort","a","b","progress","MusicChange","lyc","lyricDispose","lrc","_this","audio","pause","getElementsByClassName","tool","ended","currentTime","duration","m","toString","s","padStart","percentage","offsetWidth","lycBrief","allLyc","popupBox","startY","setMucTiem","bottom","showAll","img","Playing","showPopup","unShowAll","plate","onTouchStart","onTouchEnd","progressClick","autoPlay","onTimeUpdate","timeupdate","controls","onPlaying","onPause","loop","visible","onClose","animationType","renderHeader","tiemId","search","boxStyle","searchList","singerData","playlists","searchHot","focus","getSearchHot","hots","clearInterval","input","value","trim","searchMusic","box","keywords","songs","album","data-seed","first","placeholder","onChange","App","isPC","test","navigator","userAgent","location","reload","path","component","Home","SongMenu","SingerDetails","Search","Boolean","hostname","ReactDOM","render","serviceWorker","ready","then","registration","unregister"],"mappings":"2nBAKMA,G,kNACFC,MAAQ,G,wEACE,IAAD,OACL,OACI,yBAAKC,UAAU,UACX,uBACIC,KAAK,QACLC,KAAM,uBAAMC,KAAK,aACjBC,YAAa,aACbC,aAAc,CACV,uBACIC,IAAI,IACJH,KAAK,SACLI,MAAO,CAAEC,YAAa,QACtBC,QAAS,WACL,EAAKC,MAAMC,QAAQC,KAAK,gBAVxC,2B,GALKC,IAAMC,YA2BZC,cAAWjB,G,qIC7BtBkB,E,OAAUC,EAAMC,OAAO,CACvBC,QAAS,0BAGbH,EAAQI,SAASC,kBAAoB,CACjC,SAAAC,GAEI,OAAOA,IAKfN,EAAQO,aAAaP,QAAQQ,KACzB,SAAAC,GACI,OAAOA,KAEX,SAAAC,GACI,OAAOC,QAAQC,OAAOF,MAK9BV,EAAQO,aAAaM,SAASL,KAC1B,SAAAK,GACI,OAAOC,KAAKC,MAAMF,EAASP,SAE/B,SAAAI,GACI,OAAOC,QAAQC,OAAOF,MAIfV,QCzBf,SAASgB,EAAWC,GAChB,OAAOjB,EAAQ,CACXkB,OAAQ,MACRC,IAAK,mBACLC,OAAO,CAACH,QAIhB,SAASI,EAAYJ,GACjB,OAAOjB,EAAQ,CACXkB,OAAQ,MACRC,IAAK,iBACLC,OAAO,CAACH,Q,YCdVK,E,2MACFvC,MAAQ,CACJuC,SAAU,I,mFAGVC,KAAKC,gB,+BAEAC,GACLF,KAAK7B,MAAMC,QAAQC,KAAK,aAAe6B,EAAKR,M,6KDZzCjB,EAAQ,CACXkB,OAAQ,MACRC,IAAK,kB,OCcGO,E,OACJH,KAAKI,SACD,CACIL,SAAUI,EAAIE,SAElB,WACI,IAAIC,EAAYC,SAASC,eAAe,aACxC,IAAIC,IAAQH,EAAW,CACnBI,OAAO,EACPC,OAAQ,CACJC,KAAK,Q,gDAOrBC,QAAQC,IAAR,M,8IAGE,IAAD,OACL,OACI,yBAAKrD,UAAU,YACX,yBAAKA,UAAU,SAAf,4BACA,2BACI,4BACKuC,KAAKxC,MAAMuC,SAASgB,KAAI,SAACb,EAAMc,GAC5B,OACI,wBACIjD,IAAKiD,EACL9C,QAAS,kBAAM,EAAK+C,SAASf,KAE7B,yBAAKzC,UAAU,UACX,yBAAKyD,IAAKhB,EAAKiB,OAAQC,IAAI,MAE/B,6BAAMlB,EAAKmB,MACX,uBAAG5D,UAAU,sBACR,IACA6D,KAAKC,KAAKrB,EAAKsB,UAAY,KAFhC,qB,GAhDblD,IAAMC,WA8DdC,cAAWuB,G,IC/DLO,E,2MACjB9C,MAAQ,CACJiE,WAAY,I,mFAGZzB,KAAK0B,e,4KCRFjD,EAAQ,CACXkB,OAAQ,MACRC,IAAK,UACLC,OAAO,CACHjC,KDQ0B,CACtBA,KAAM,M,OADNuC,E,OAGJH,KAAKI,SAAS,CACVqB,WAAYtB,EAAIwB,U,gDAGpBd,QAAQC,IAAR,M,8IAGE,IAAD,OACL,OACI,yBAAKrD,UAAU,YAAYiC,GAAG,aAC1B,6BACI,yBAAKjC,UAAU,OACf,yBAAKA,UAAU,YACX,2BACI,uBACImE,UAAU,EACVC,UAAQ,EACRC,aAAc,SAACC,EAAMC,KACrBC,YAAa,SAAAjB,MAEZhB,KAAKxC,MAAMiE,WAAWV,KAAI,SAACb,EAAMc,GAAP,OACvB,yBACIjD,IAAKiD,EACLhD,MAAO,CACHkE,QAAS,eACTC,MAAO,OACPC,OAAQ,MAGZ,yBACIlB,IAAKhB,EAAKmC,SACVjB,IAAI,GACJpD,MAAO,CACHmE,MAAO,OACPC,OAAQ,QACRE,cAAe,OAEnBC,OAAQ,WAEJC,OAAOC,cACH,IAAIC,MAAM,WAEd,EAAKtC,SAAS,CACVuC,UAAW,mBAS3C,yBAAKlF,UAAU,aACX,kBAAC,EAAD,a,GAjEea,IAAMC,W,OEJ7C,SAASqE,EAAT,GAAoC,IAAfC,EAAc,EAAdA,IAAIC,EAAU,EAAVA,QACrB,OAAOrE,EAAQ,CACXkB,OAAQ,MACRC,IAAK,eACLC,OAAO,CACHgD,MACAC,aAKZ,SAAS7C,EAAT,GAA4B,IAANP,EAAK,EAALA,GAClB,OAAOjB,EAAQ,CACXkB,OAAQ,MACRC,IAAK,WACLC,OAAO,CACHH,QAIZ,SAASqD,EAAcrD,GACnB,OAAOjB,EAAQ,CACXkB,OAAQ,MACRC,IAAK,gBACLC,OAAO,CACHH,QCpBZ,IAAMsD,EAAO,IAAKA,KAEZC,E,2MACFzF,MAAQ,CACJwD,MAAO,KACPkC,YAAa,KACbnE,KAAM,CACF,CAAEsC,KAAM,2BAAQL,MAAO,MACvB,CAAEK,KAAM,iCAASL,MAAO,MACxB,CAAEK,KAAM,iCAASL,MAAO,MACxB,CAAEK,KAAM,2BAAQL,MAAO,MACvB,CAAEK,KAAM,iCAASL,MAAO,MACxB,CAAEK,KAAM,iCAASL,MAAO,MACxB,CAAEK,KAAM,2BAAQL,MAAO,MACvB,CAAEK,KAAM,iCAASL,MAAO,MACxB,CAAEK,KAAM,iCAASL,MAAO,MACxB,CAAEK,KAAM,2BAAQL,MAAO,MACvB,CAAEK,KAAM,iCAASL,MAAO,MACxB,CAAEK,KAAM,iCAASL,MAAO,MACxB,CAAEK,KAAM,2BAAQL,MAAO,MACvB,CAAEK,KAAM,iCAASL,MAAO,MACxB,CAAEK,KAAM,iCAASL,MAAO,MACxB,CAAEK,KAAM,2BAAQL,MAAO,OAG3BmC,OAAQ,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEJC,WAAY,I,sEAETC,GACHrD,KAAKI,SAAS,CAAEY,MAAOqC,IACvBrD,KAAKsD,SAAS,CACVT,IAAK7C,KAAKxC,MAAMuB,KAAKsE,GAAQrC,MAC7B8B,QAC+B,OAA3B9C,KAAKxC,MAAM0F,YACLlD,KAAKxC,MAAM2F,OAAOnD,KAAKxC,MAAM0F,kBAC7BK,IAEdvD,KAAKI,SAAS,CAAEgD,WAAY,O,mCAEnBC,GACTrD,KAAKI,SAAS,CAAE8C,YAAaG,IAC7BrD,KAAKsD,SAAS,CACVT,IACyB,OAArB7C,KAAKxC,MAAMwD,MACLhB,KAAKxC,MAAMuB,KAAKiB,KAAKxC,MAAMwD,OAAOA,WAClCuC,EACVT,QAAS9C,KAAKxC,MAAM2F,OAAOE,KAE/BrD,KAAKI,SAAS,CAAEgD,WAAY,O,4JAGxBI,EAAWjD,SAASC,eAAe,YACvC,IAAIC,IAAQ+C,EAAU,CAAE9C,OAAO,EAAM+C,SAAS,EAAMC,SAAS,IACzDP,EAAS5C,SAASC,eAAe,UACrC,IAAIC,IAAQ0C,EAAQ,CAAEzC,OAAO,EAAM+C,SAAS,EAAMC,SAAS,IAC3D1D,KAAKsD,SAAS,CAAET,IAAK,O,mQAGRA,E,EAAAA,IAAKC,E,EAAAA,Q,kBAEEF,EAAW,CAAEC,MAAKC,Y,OAA9B3C,E,OACJH,KAAKI,SAAS,CAAEgD,WAAYjD,EAAIwD,U,gDAEhC9C,QAAQC,IAAR,M,+IAIE,IAAD,OACL,OACI,yBAAKrD,UAAU,UACX,yBAAKiC,GAAG,WAAWjC,UAAU,YACzB,4BACI,wBAAIA,UAAU,SAAd,2CACCuC,KAAKxC,MAAMuB,KAAKgC,KAAI,SAACb,EAAMc,GACxB,OACI,wBACI9C,QAAS,kBAAM,EAAK0F,OAAO5C,IAC3BjD,IAAKiD,EACLvD,UACIuD,IAAU,EAAKxD,MAAMwD,MACf,WACA,IAGTd,EAAKmB,WAM1B,yBAAK5D,UAAU,SAASiC,GAAG,UACvB,4BACI,wBAAIjC,UAAU,SAAd,uBACCuC,KAAKxC,MAAM2F,OAAOpC,KAAI,SAACb,EAAMc,GAC1B,OACI,wBACI9C,QAAS,kBAAM,EAAK2F,aAAa7C,IACjCjD,IAAKiD,EACLvD,UACIuD,IAAU,EAAKxD,MAAM0F,YACf,kBACA,IAGThD,QAMrB,yBAAKzC,UAAU,QACX,2BACKuC,KAAKxC,MAAM4F,WAAWrC,KAAI,SAACb,EAAMc,GAC9B,OACI,yBAAKvD,UAAU,OAAOM,IAAKiD,GACvB,kBAACgC,EAAD,CACIc,MAAO5D,EAAKiB,OACZjD,QAAS,WACL,EAAKC,MAAMC,QAAQC,KAAnB,yBACsB6B,EAAKR,OAI9BQ,EAAKmB,iB,GA3IzB/C,IAAMC,WAuJZC,cAAWyE,G,kCC1J1B,IAAMD,EAAO,IAAKA,KACZe,EAAQf,EAAKe,MAEbC,E,2MACFxG,MAAQ,CACJuB,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,GACnBkF,cAAe,GACfC,WAAY,I,mFAGZlE,KAAKmE,e,mLCbF1F,EAAQ,CACXkB,OAAQ,MACRC,IAAK,a,ODeGO,E,OACJH,KAAKI,SAAS,CAAE6D,cAAe9D,EAAIiE,KAAKC,MAAM,EAAG,KAAM,WACnD,EAAK7G,MAAMyG,cAAcK,SAAQ,SAACpE,EAAKc,GACnC,EAAKuD,YAAYrE,EAAKR,GAAGsB,SAGjChB,KAAKI,SAAS,CAAE8D,WAAY/D,EAAIiE,KAAKC,MAAM,EAAGlE,EAAIiE,KAAKI,U,gDAEvD3D,QAAQC,IAAR,M,0LAGUpB,EAAGsB,G,kGAEGvB,EAAWC,G,OAAvBS,E,QACAsE,EAAMzE,KAAKxC,MAAMyG,eACjBjD,GAAO0D,KAAKvE,EAAIwE,SAASC,OAAOP,MAAM,EAAE,GAC5CrE,KAAKI,SAAS,CAAC6D,cAAcQ,I,gDAE7B5D,QAAQC,IAAR,M,iJAICZ,GACLF,KAAK7B,MAAMC,QAAQC,KAAK,aAAe6B,EAAKR,M,+BAEtC,IAAD,OACL,OACI,yBAAKjC,UAAU,WACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,SAAf,sBACA,2BACKuC,KAAKxC,MAAMyG,cAAclD,KAAI,SAACb,EAAMc,GACjC,OACI,kBAAC,EAAD,CACIjD,IAAKiD,EACL8C,MAAO5D,EAAK2E,YACZ3G,QAAS,WACL,EAAK+C,SAASf,KAGjB,EAAK1C,MAAMyG,cAAcjD,GAAO0D,KAAK3D,KAAI,SAACb,EAAKc,GAC5C,OAAO,kBAAC+C,EAAD,CAAOhG,IAAKiD,GAAQA,EAAM,EAA1B,KAA+Bd,EAAKmB,eAOnE,yBAAK5D,UAAU,UACX,yBAAKA,UAAU,SAAf,sBACA,uBACIqH,SAAS,EACT/F,KAAMiB,KAAKxC,MAAM0G,WACjBa,UAAW,EACXC,WAAY,SAAA9E,GAAI,OACZ,yBAAKhC,QAAS,WAAK,EAAK+C,SAASf,KAC7B,yBACIgB,IAAKhB,EAAK2E,YACV7G,MAAO,CACHmE,MAAO,OACPC,OAAQ,OACR6C,aAAc,OAElB7D,IAAI,KAER,yBACIpD,MAAO,CACHkH,MAAO,OACPC,SAAU,OACVC,UAAW,SAGf,8BAAOlF,EAAKmF,6B,GApF9B/G,IAAMC,WAgGbC,cAAWwF,GEjGpBsB,GAAO,CACT,CAAEC,MAAO,eAAMC,IAAK,KACpB,CAAED,MAAO,eAAMC,IAAK,KACpB,CAAED,MAAO,qBAAOC,IAAK,MAGJC,G,2MACjBjI,MAAQ,G,wEAEJ,OACI,yBAAKC,UAAU,QACX,kBAAC,EAAD,MACA,uBACI6H,KAAMA,GACNI,YAAa,EACbC,sBAAsB,UACtBC,wBAAwB,UACxBC,sBAAsB,UACtBC,WAAW,GAEX,yBAAKrI,UAAU,UACX,kBAAC,EAAD,OAEJ,yBACIO,MAAO,CACHkE,QAAS,OACT6D,WAAY,SACZC,eAAgB,SAChB5D,OAAQ,QACR6D,gBAAiB,YAGrB,yBAAKxI,UAAU,UACX,kBAAC,EAAD,QAGR,yBACIO,MAAO,CACHkE,QAAS,OACT6D,WAAY,SACZC,eAAgB,SAChB5D,OAAQ,QACR6D,gBAAiB,YAGrB,yBAAKxI,UAAU,UACX,kBAAC,EAAD,SAIZ,iC,GA5CkBa,IAAMC,W,yDCd3B2H,GAAe,eCK5B,IAAMC,GAAmB3D,OAAO4D,sCAAwCC,KAKzDC,GAJD,CACVC,SAAUC,cCLd,SAAkBzH,EAAM0H,GACpB,OAAQA,EAAO7I,MACX,KAAKsI,GACD,OAAcO,EAAO1H,KACzB,QACI,OAAOA,KDAiBoH,GAAiBO,aAAgBC,SELxDC,GAAa,SAAC7H,GACvB,MAAO,CACHnB,KAAKsI,GACLnH,SCEFiE,GAAO,IAAKA,KACZe,GAAQf,GAAKe,MAEE9C,G,2MACjBzD,MAAQ,CACJuB,KAAM,CACFsC,KAAM,eACNuD,OAAQ,GACRiC,gBAAiB,EACjBhC,YACI,wEAERiC,QAAS,CACLC,gBACI,+EAERC,KAAM,I,0MAGNhH,KAAKI,SAAS,CAAE4G,KAAM,CAAEC,UAAW,kBACnC1G,SAAS2G,gBAAgBC,UAAY,E,kBAEjB1H,EAAWO,KAAK7B,MAAMiJ,MAAMvH,OAAOH,I,OAA/CS,E,OACJH,KAAKI,SAAS,CAAErB,KAAMoB,EAAIwE,WAAY,WAClC,IAAI0C,EAAe9G,SAASC,eAAe,gBAC3C,IAAIC,IAAQ4G,EAAc,CACtB3G,OAAO,EACPC,OAAQ,CACJC,KAAK,QAIjBZ,KAAKI,SAAS,CACV0G,QAAS,CACLC,gBAAgB,QAAD,OAAU5G,EAAIwE,SAASE,YAAvB,S,kDAIvBhE,QAAQC,IAAR,M,2IAIHsD,EAAMpD,EAAOsG,GACd,IAAI7C,EAAM,GACVL,EAAKE,SAAQ,SAAApE,GACTuE,EAAIpG,KAAK,CACLqB,GAAIQ,EAAKR,GACT2B,KAAMnB,EAAKmB,KACXkG,MAAOrH,EAAKsH,GAAGlG,KAAKmG,MAAMnG,KAAKoG,SAAWxH,EAAKsH,GAAGhD,SAAS9E,GAC3DiI,OAAQzH,EAAKsH,GAAG,GAAGnG,UAG3BiF,GAAMC,SAASqB,SAAShB,GAAW,CAAExC,KAAMK,EAAKzD,QAAO6G,KAAMP,O,+BAEvD,IAAD,OACL,OACI,yBACI5H,GAAG,WACHjC,UAAU,WACVqK,IAAK,SAAAC,GAAG,OAAK,EAAK9G,SAAW8G,GAC7B/J,MAAOgC,KAAKxC,MAAMwJ,MAElB,yBAAKvJ,UAAU,SACX,yBAAKA,UAAU,KAAKO,MAAOgC,KAAKxC,MAAMsJ,UACtC,yBAAKrJ,UAAU,WACX,uBACIC,KAAK,QACLC,KAAM,uBAAMC,KAAK,SACjBC,YAAa,WACT,EAAKuC,SAAS,CACV4G,KAAM,CAAEC,UAAW,oBAEvBe,YAAW,WACP,EAAK7J,MAAMC,QAAQ6J,IAAI,KACxB,MAEPC,YACI,0BAAMzK,UAAU,SACXuC,KAAKxC,MAAMuB,KAAKsC,QAI7B,yBAAK5D,UAAU,YACX,yBAAKyD,IAAKlB,KAAKxC,MAAMuB,KAAK8F,YAAazD,IAAI,KAC3C,6BACI,yBAAK3D,UAAU,SACVuC,KAAKxC,MAAMuB,KAAKsC,MAErB,yBAAK5D,UAAU,QACX,yBACIyD,IAAI,wEACJE,IAAI,KAHZ,oCASR,yBAAK3D,UAAU,UACX,4BACI,4BACI,uBAAGA,UAAU,6BACb,+CAEJ,4BACI,uBAAGA,UAAU,2BACb,+CAEJ,4BACI,uBAAGA,UAAU,sBACb,+CAEJ,4BACI,uBAAGA,UAAU,sCACb,mDAMpB,yBAAKiC,GAAG,eAAejC,UAAU,gBAC7B,2BACI,yBAAKA,UAAU,SACX,6BACI,uBACIA,UAAU,uBACVS,QAAS,SAAAoJ,GAAC,OACN,EAAKa,KAAK,EAAK3K,MAAMuB,KAAK6F,OAAQ,EAAG0C,MAG7C,yDAEI,8BACK,IADL,UAEOtH,KAAKxC,MAAMuB,KAAK6F,OAAOJ,OAF9B,aAOR,4BACI,uBAAG/G,UAAU,sBADjB,gBAEI,0BAAMA,UAAU,OAAhB,IAEK6D,KAAKC,KACFvB,KAAKxC,MAAMuB,KAAK8H,gBAAkB,KAClC,GAJR,aASP7G,KAAKxC,MAAMuB,KAAK6F,OAAO7D,KAAI,SAACb,EAAMc,GAC/B,OACI,yBAAKvD,UAAU,MAAMM,IAAKiD,GACtB,0BAAMvD,UAAU,SAASuD,EAAQ,GACjC,kBAAC,GAAD,CACIoH,cAAY,EACZlK,QAAS,SAAAoJ,GAAC,OACN,EAAKa,KACD,EAAK3K,MAAMuB,KAAK6F,OAChB5D,EACAsG,KAIPpH,EAAKmB,KAAM,IACZ,kBAAC,GAAD,KAAQnB,EAAKsH,GAAG,GAAGnG,YAOJ,IAAlCrB,KAAKxC,MAAMuB,KAAK6F,OAAOJ,QACpB,uBAAM5G,KAAK,kB,GAzKGU,IAAMC,WCHtCyE,I,OAAO,IAAKA,MACZe,GAAQf,GAAKe,MAEEsE,G,2MACjB7K,MAAQ,CACJuC,SAAU,CACNuI,OAAQ,CACJnH,OACI,uEACJE,KAAM,gBAEVkH,SAAU,IAEdvB,KAAM,I,mFAEW,IAAD,OAChBhH,KAAKC,cACL+H,YAAW,WACP,EAAK5H,SAAS,CAAE4G,KAAM,CAAEC,UAAW,oBACpC,K,6KAIiBhH,EAAY,CACxBP,GAAIM,KAAK7B,MAAMiJ,MAAMvH,OAAOH,K,OAD5BS,E,OAGJH,KAAKI,SAAS,CAAEL,SAAUI,IAAO,WAC7B,IAAIkH,EAAe9G,SAASC,eAAe,gBAC3C,IAAIC,IAAQ4G,EAAc,CACtB3G,OAAO,EACPC,OAAQ,CACJC,KAAK,Q,gDAKjBC,QAAQC,IAAR,M,0IAIHsD,EAAKpD,EAAMsG,GACZ,IAAI7C,EAAM,GACVL,EAAKE,SAAQ,SAACpE,GACVuE,EAAIpG,KAAK,CACLqB,GAAGQ,EAAKR,GACR2B,KAAKnB,EAAKmB,KACVkG,MAAMrH,EAAKsH,GAAGlG,KAAKmG,MAAMnG,KAAKoG,SAASxH,EAAKsH,GAAGhD,SAAS9E,GACxDiI,OAAOzH,EAAKsH,GAAG,GAAGnG,UAG1BiF,GAAMC,SAASqB,SAAShB,GAAW,CAAExC,KAAMK,EAAKzD,QAAO6G,KAAMP,O,+BAEvD,IAAD,OACL,OACI,yBACI5H,GAAG,gBACHjC,UAAU,gBACVO,MAAOgC,KAAKxC,MAAMwJ,MAElB,yBACIvJ,UAAU,QACVO,MAAO,CACH+I,gBAAgB,OAAD,OAAS/G,KAAKxC,MAAMuC,SAASuI,OAAOnH,OAApC,OAGnB,wBAAQ1D,UAAU,MAAM+K,QAAM,EAAC5K,KAAK,WAChC,uBAAGH,UAAU,qBAAb,mBAGR,yBAAKiC,GAAG,eAAejC,UAAU,gBAC7B,2BACI,yBAAKA,UAAU,SACX,6BACI,uBAAGA,UAAU,uBAAuBS,QAAS,SAACoJ,GAAD,OAAO,EAAKa,KAAK,EAAK3K,MAAMuC,SAASwI,SAAS,EAAEjB,MAC7F,yDAEI,8BACKtH,KAAKxC,MAAMuC,SAASwI,UAApB,iBACQvI,KAAKxC,MAAMuC,SAASwI,SAAS/D,OADrC,eAMhBxE,KAAKxC,MAAMuC,SAASwI,SAASxH,KAAI,SAACb,EAAMc,GACrC,OACI,yBAAKvD,UAAU,MAAMM,IAAKiD,GACtB,0BAAMvD,UAAU,SAASuD,EAAQ,GACjC,kBAAC,GAAD,CAAMoH,cAAY,EAAClK,QAAS,SAACoJ,GAAD,OAAO,EAAKa,KAAK,EAAK3K,MAAMuC,SAASwI,SAASvH,EAAMsG,KAC3EpH,EAAKmB,KACN,kBAAC,GAAD,KACKnB,EAAKsH,GAAG,GAAGnG,KADhB,MACyBnB,EAAKmB,YAQT,IAAxCrB,KAAKxC,MAAMuC,SAASwI,SAAS/D,QAC1B,uBAAM5G,KAAK,aAInB,yBAAKH,UAAU,OACX,uBACIG,KAAK,OACLM,QAAS,WACL,EAAKkC,SAAS,CACV4G,KAAM,CAAEC,UAAW,oBAEvBe,YAAW,WACP,EAAK7J,MAAMC,QAAQ6J,IAAI,KACxB,QAGVjI,KAAKxC,MAAMuC,SAASuI,OAAOjH,W,GAhHL/C,IAAMC,W,qCCCjD,SAASkK,GAAY/I,GACjB,OAAOjB,EAAQ,CACXkB,OAAQ,MACRC,IAAK,SACLC,OAAO,CACHH,QC4BGgJ,OA5Cf,SAAiBC,GAAyB,IAApBC,EAAmB,uDAAZ,IAAMhL,EAAM,uCACjCiL,EAAQtI,SAASuI,cAAc,OAOnC,OANAD,EAAME,UAAYJ,EAClBpI,SAASyI,KAAKC,OAAOJ,GACrBA,EAAM7K,MAAMkL,SAAW,QACvBL,EAAM7K,MAAMmL,QAAU,EACtBN,EAAM7K,MAAMoL,KAAO,MACnBP,EAAM7K,MAAMqL,UAAU,SACdzL,GACJ,IAAK,MACDiL,EAAM7K,MAAM4C,IAAM,MAClBiI,EAAM7K,MAAMiJ,UAAY,mBACxBe,YAAW,WACPa,EAAM7K,MAAM4C,IAAM,OACnB,GACH,MACJ,IAAK,SACDiI,EAAM7K,MAAM4C,IAAM,OAClBiI,EAAM7K,MAAMiJ,UAAY,mBACxBe,YAAW,WACPa,EAAM7K,MAAM4C,IAAM,QACnB,GACH,MACJ,QACIiI,EAAM7K,MAAM4C,IAAM,MAClBiI,EAAM7K,MAAMiJ,UAAY,oCAGhC4B,EAAM7K,MAAMsL,OAAS,YACrBT,EAAM7K,MAAMuL,WAAa,UACzBV,EAAM7K,MAAMwL,QAAU,WACtBX,EAAM7K,MAAMiI,gBAAkB,iBAC9B4C,EAAM7K,MAAMkH,MAAQ,OACpB2D,EAAM7K,MAAMiH,aAAe,MAC3B+C,YAAW,WACPa,EAAM7K,MAAMmL,QAAU,IACvB,GACHnB,YAAW,WACPa,EAAM7K,MAAMmL,QAAU,IACvBP,GACHZ,YAAW,WACPzH,SAASyI,KAAKS,YAAYZ,KAC3BD,EAAO,MChCR5F,GAAO,IAAKA,KACZe,GAAQf,GAAKe,MAEE2F,G,2MACjBlM,MAAQ,CACJmM,QAAQ,EACRpD,SAAU,GACVS,KAAM,EACN4C,UAAW,GACX5I,MAAO,EACPG,OAAQ,GACR0I,UAAW,GACXC,QAAS,GACTC,WAAY,CACRC,QAAS,EACTC,IAAK,GAETC,YAAa,YACbC,OAAQ,KACRC,aAAc,KACdC,WAAW,EACXC,WAAW,EACXC,aAAa,G,mFAEI,IAAD,OAChB/H,OAAOgI,iBAAiB,aAAa,SAAAC,GACjC,GAAK,EAAKjN,MAAM+M,YAAhB,CAGA,IAAIG,EACAD,EAAME,eAAe,GAAGC,QAAU,EAAKC,YAAYC,WACvD,EAAKC,YAAYL,OAErBpE,GAAMC,SAASyE,WAAU,WACrB,IAAIjM,EAAOuH,GAAMC,SAAS0E,YC5CtC,SAAuB3D,GACnB,IAAI4D,EAAO3K,SAASC,eAAe,QAC/B2K,EAAM5K,SAASuI,cAAc,KACjCqC,EAAI1N,UAAY,gCAChB0N,EAAInN,MAAM4C,IAAM0G,EAAE8D,MAAQ,EAAI,KAC9BD,EAAInN,MAAMoL,KAAO9B,EAAE+D,MAAQ,EAAI,KAC/BH,EAAKjC,OAAOkC,GACZnD,YAAW,WACPmD,EAAInN,MAAM4C,IAAM4B,OAAOoB,OAAOxB,OAAS,GAAK,KAC5C+I,EAAInN,MAAMoL,KAAO,KACjB+B,EAAInN,MAAMmH,SAAW,SACtB,GACH6C,YAAW,WACPmD,EAAInN,MAAMmL,QAAU,IACtB,KACFnB,YAAW,WACPkD,EAAKzB,YAAY0B,KAClB,KD4BKG,CAAcvM,EAAK8I,MACnB,EAAKzH,SAAS,CAAEwJ,UAAW7K,EAAKqF,OAAQ,WACpC,EAAKhE,SAAS,CAAEY,MAAOjC,EAAKiC,QAAS,WACjC,EAAKuK,yB,mCAMRC,GAGT,IAFA,IAAI/G,EAAM+G,EAAMC,MAAM,MAClBC,EAAW,GACNC,EAAI,EAAGA,EAAIlH,EAAID,QACfC,EAAIkH,GADmBA,IAAK,CAEjC,IAAIC,EAAUnH,EAAIkH,GAAGvE,MAAM,WAAW,GACtCwE,EAAUA,EAAQC,UAAU,EAAGD,EAAQpH,OAAS,GAGhD,IAFA,IAAIsH,EAAMrH,EAAIkH,GAAGI,QAAQ,UAAW,IAChCC,EAAUJ,EAAQH,MAAM,MACnBQ,EAAI,EAAGA,EAAID,EAAQxH,OAAQyH,IAEhCP,EAASrN,KAAK,CACV6N,KACIC,OAAOH,EAAQC,GAAGR,MAAM,KAAK,IACM,GAAnCU,OAAOH,EAAQC,GAAGR,MAAM,KAAK,IACjCK,QAIZ,OAAOJ,EAASU,MAAK,SAACC,EAAGC,GACrB,OAAOD,EAAEH,KAAOI,EAAEJ,U,oKAKtBlM,KAAKI,SAAS,CAAEmG,SAAU,KAC1BvG,KAAKuM,SAASvO,MAAMmE,MAAQ,G,kBF9EfzC,EEiFLM,KAAKxC,MAAMoM,UAAU5J,KAAKxC,MAAMwD,OAAOtB,GFhF5CjB,EAAQ,CACXkB,OAAQ,MACRC,IAAK,YACLC,OAAO,CACHH,Q,cE8EwB,QAHpBS,E,QAGIpB,KAAK,GAAGa,MACZ8I,GAAQ,qBAAD,OAAO1I,KAAKxC,MAAMoM,UAAU5J,KAAKxC,MAAMwD,OAAOK,KAA9C,4DAAiE,KACxErB,KAAKwM,YAAY,IAErBxM,KAAKI,SAAS,CAAEmG,SAAUpG,EAAIpB,KAAK,GAAGa,MAAO,WACjB,IAApB,EAAKpC,MAAMwJ,MACX,EAAK5G,SAAS,CAAE4G,KAAM,QAG9BhH,KAAK+C,cAAc/C,KAAKxC,MAAMoM,UAAU5J,KAAKxC,MAAMwD,OAAOuG,OAC1DvH,KAAKI,SAAS,CACVyJ,UAAW7J,KAAKxC,MAAMoM,UAAU5J,KAAKxC,MAAMwD,OAAOK,OAEtDrB,KAAKI,SAAS,CACV0J,QAAS9J,KAAKxC,MAAMoM,UAAU5J,KAAKxC,MAAMwD,OAAO2G,S,UAEpCc,GACZzI,KAAKxC,MAAMoM,UAAU5J,KAAKxC,MAAMwD,OAAOtB,I,QAEvC,QAHA+M,E,QAIAzM,KAAKI,SAAS,CAAE+J,OAAQnK,KAAK0M,aAAaD,EAAIE,IAAInB,SAElDxL,KAAKI,SAAS,CAAE+J,OAAQ,K,kDAG5BtJ,QAAQC,IAAR,M,kCF5GZ,IAAqBpB,I,yGEgHTkN,GACJ,IAAIC,EAAQtM,SAASC,eAAe,SAChCoM,EAAMpP,MAAMmM,OACZkD,EAAMC,QAEND,EAAM1E,S,8BAINyE,GACJA,EAAMxM,SAAS,CAAE4G,KAAM,SACZzG,SAASwM,uBAAuB,QAAQ,GAC9C/O,MAAMkE,QAAU,S,gCAGf0K,GACNA,EAAMxM,SAAS,CAAE4G,KAAM,KACvB,IAAIgG,EAAOzM,SAASwM,uBAAuB,QAAQ,GACnDC,EAAKhP,MAAMkE,QAAU,OACrB8K,EAAKhP,MAAMmL,QAAU,EACrBnB,YAAW,WACPgF,EAAKhP,MAAMmL,QAAU,IACtB,K,iCAGIyD,GACP,IAAIC,EAAQtM,SAASC,eAAe,SAEpC,GAAIqM,EAAMI,OAAoC,gBAA3BjN,KAAKxC,MAAM0M,YAC1BlK,KAAKwM,YAAY,OADrB,CAIA,IAAIU,EAAc,OACdC,EAAW,OACf,GAAIN,EAAMK,YAAc,EAAG,CACvBA,EAAc5L,KAAKmG,MAAMoF,EAAMK,aAC/B,IAAIE,EAAI9L,KAAKmG,MAAMyF,EAAc,IAAIG,WACjCC,GAAKJ,EAAc,IAAIG,WAC3BH,EAAW,UAAME,EAAN,YAAWE,EAAEC,SAAS,EAAG,MAExC,GAAIV,EAAMM,SAAW,EAAG,CACpBA,EAAW7L,KAAKmG,MAAMoF,EAAMM,UAC5B,IAAIC,EAAI9L,KAAKmG,MAAM0F,EAAW,IAAIE,WAC9BC,GAAKH,EAAW,IAAIE,WACxBF,EAAQ,UAAMC,EAAN,YAAWE,EAAEC,SAAS,EAAG,MAQrC,GANAX,EAAMxM,SAAS,CACX2J,WAAY,CACRC,QAASkD,EACTjD,IAAKkD,MAGRnN,KAAKxC,MAAM+M,YAAa,CACzB,IAAIiD,EAAaX,EAAMK,YAAcL,EAAMM,SAC3CnN,KAAKuM,SAASvO,MAAMmE,MAChBqL,EAAaxN,KAAK6K,YAAY4C,YAAc,KAEpD,GAAIzN,KAAKxC,MAAM2M,OAAQ,CAGnB,IADA,IAAIH,EAAU6C,EAAMK,YAAc,GACzBvB,EAAI3L,KAAKxC,MAAM2M,OAAO3F,OAAS,EAAGmH,GAAK,EAAGA,IAE/C,GAAI3L,KAAKxC,MAAM2M,OAAOwB,GAAGO,KAAOlC,EAO5B,OANIhK,KAAKxC,MAAM4M,eAAiBuB,IAE5B3L,KAAK0N,SAAS3E,UAAY/I,KAAKxC,MAAM2M,OAAOwB,GAAGG,IAC/C9L,KAAK2N,OAAO3P,MAAM4C,IAAW,IAAJ+K,EAAS,WAEtC3L,KAAKI,SAAS,CAAEgK,aAAcuB,IAKtC3L,KAAKI,SAAS,CAAEgK,aAAc,OAC9BpK,KAAK2N,OAAO3P,MAAM4C,IAAM,W,6EAIZlB,G,gGAEIqD,EAAcrD,G,OAA1BS,E,OACJH,KAAKI,SAAS,CACVe,OAAQhB,EAAImI,OAAOnH,S,gDAGvBN,QAAQC,IAAR,M,kJAIIE,GAAQ,IAAD,OACXqC,EAAS,KACb,OAAQrD,KAAKxC,MAAM0M,aACf,IAAK,YACL,IAAK,cACa,IAAVlJ,IAEIqC,EADArD,KAAKxC,MAAMwD,QAAUhB,KAAKxC,MAAMoM,UAAUpF,OAAS,EAC1CxE,KAAKxC,MAAMwD,MAAQ,EAEnB,IAGF,IAAXA,IAEIqC,EADqB,IAArBrD,KAAKxC,MAAMwD,MACFhB,KAAKxC,MAAMwD,MAAQ,EAEnBhB,KAAKxC,MAAMoM,UAAUpF,OAAS,GAG/CxE,KAAKI,SAAS,CAAEY,MAAOqC,IAAU,WAC7B,EAAKkI,iBAET,MAEJ,IAAK,SACDlI,EAAS/B,KAAKmG,MACVnG,KAAKoG,SAAW1H,KAAKxC,MAAMoM,UAAUpF,QAEzCxE,KAAKI,SAAS,CAAEY,MAAOqC,IAAU,WAC7B,EAAKkI,oB,kCAUR,IAAD,OACRvL,KAAKI,SACD,CACIkK,WAAYtK,KAAKxC,MAAM8M,YAE3B,WACI,IAAI7J,IAAQ,EAAKmN,SAAU,CACvBlN,OAAO,EACPmN,OAA4B,IAAnB,EAAKrQ,MAAMwD,a,oCAMtBsG,GACVtH,KAAK+K,YAAYzD,EAAEsD,QAAU5K,KAAK6K,YAAYC,YAC9C9K,KAAK8N,e,kCAEGpD,GACR1K,KAAKuM,SAASvO,MAAMmE,MAAQuI,EAAI,O,mCAGhC,GAAK1K,KAAKxC,MAAMmM,OAAhB,CAGA,IAAI6D,EACAxN,KAAKuM,SAASkB,YAAczN,KAAK6K,YAAY4C,YAC7CD,EAAa,MACbA,EAAa,GAEjBxN,KAAK6M,MAAMK,YAAclN,KAAK6M,MAAMM,SAAWK,K,+BAEzC,IAAD,OACL,OACI,yBAAK/P,UAAU,YAAYO,MAAO,CAAE+P,OAAQ/N,KAAKxC,MAAMwJ,OACnD,yBAAKvJ,UAAU,MACX,yBACIA,UAAU,SACVO,MAAO,CAAE+I,gBAAgB,OAAD,OAAS/G,KAAKxC,MAAM2D,OAApB,SAGhC,yBAAK1D,UAAU,QACX,kBAAC,GAAD,CACIqG,MAAO9D,KAAKxC,MAAM2D,OAClBjD,QAAS,kBAAM,EAAK8P,QAAQ,IAC5BlG,IAAK,SAAAC,GAAG,OAAK,EAAKkG,IAAMlG,IAEvB/H,KAAKxC,MAAMqM,UAAW,IACvB,kBAAC,GAAD,KAAQ7J,KAAKxC,MAAMsM,UAEvB,yBAAKrM,UAAU,OACX,uBACIS,QAAS,kBAAM,EAAKgQ,QAAQ,IAC5BzQ,UACIuC,KAAKxC,MAAMmM,OACL,wBACA,yBAGd,uBACIlM,UAAU,6BACVS,QAAS,kBAAM,EAAKiQ,iBAIhC,yBAAK1Q,UAAU,OACX,uBAAMG,KAAK,OAAOM,QAAS,kBAAM,EAAKkQ,UAAU,MAChD,yBAAK3Q,UAAU,SAASuC,KAAKxC,MAAMqM,WACnC,yBAAKpM,UAAU,UAAUuC,KAAKxC,MAAMsM,SACpC,yBACIrM,UAAU,SACVS,QAAS,kBACL,EAAKkC,SAAS,CAAEiK,WAAY,EAAK7M,MAAM6M,cAG3C,yBACI5M,UAAU,QACVO,MAAO,CACHmE,MAA6B,GAAtBK,OAAOoB,OAAOzB,MACrBC,OAA8B,GAAtBI,OAAOoB,OAAOzB,MACtBgH,QAASnJ,KAAKxC,MAAM6M,UAAY,EAAI,GAExCvC,IAAK,SAAAC,GAAG,OAAK,EAAKsG,MAAQtG,IAE1B,yBAAK7G,IAAKlB,KAAKxC,MAAM2D,OAAQC,IAAI,MAErC,yBACI3D,UAAU,WACVO,MAAO,CAAEmL,QAASnJ,KAAKxC,MAAM6M,UAAY,EAAI,IAE7C,uBAAGvC,IAAK,SAAAC,GAAG,OAAK,EAAK2F,SAAW3F,MAEpC,yBACItK,UAAU,SACVO,MAAO,CAAEmL,QAASnJ,KAAKxC,MAAM6M,UAAY,EAAI,GAC7CvC,IAAK,SAAAC,GAAG,OAAK,EAAK4F,OAAS5F,IAE1B/H,KAAKxC,MAAM2M,QACRnK,KAAKxC,MAAM2M,OAAOpJ,KAAI,SAACb,EAAMc,GACzB,OACI,uBACIjD,IAAKiD,EACLvD,UACIuD,IACI,EAAKxD,MAAM4M,aACT,UACA,IAGTlK,EAAK4L,UAM9B,yBAAKrO,UAAU,WACX,yBAAKA,UAAU,eACX,8BAAOuC,KAAKxC,MAAMuM,WAAWC,SAC7B,yBACIvM,UAAU,cACV6Q,aAAc,kBACV,EAAKlO,SAAS,CAAEmK,aAAa,KAEjCgE,WAAY,WACR,EAAKnO,SAAS,CAAEmK,aAAa,IAC7BvC,YAAW,WACP,EAAK8F,eACN,IAEP5P,QAAS,SAAAoJ,GAAC,OAAI,EAAKkH,cAAclH,KAEjC,yBAAKQ,IAAK,SAAAC,GAAG,OAAK,EAAK8C,YAAc9C,IACjC,yBACItK,UAAU,WACVqK,IAAK,SAAAC,GAAG,OAAK,EAAKwE,SAAWxE,OAIzC,yBAAKtK,UAAU,SACX,2BACIgR,UAAQ,EACRC,aAAc,kBAAM,EAAKC,WAAW,IACpCC,UAAQ,EACR1N,IAAKlB,KAAKxC,MAAM+I,SAChBsI,UAAW,WACP,EAAKzO,SAAS,CAAEuJ,QAAQ,KAE5BmF,QAAS,WACL,EAAK1O,SAAS,CAAEuJ,QAAQ,KAE5BjK,GAAG,QACHqP,KAC+B,gBAA3B/O,KAAKxC,MAAM0M,YAEfpC,IAAK,SAAAC,GAAG,OAAK,EAAK8E,MAAQ9E,MAGlC,8BAAO/H,KAAKxC,MAAMuM,WAAWE,MAEjC,yBAAKxM,UAAU,WACiB,cAA3BuC,KAAKxC,MAAM0M,aACR,uBACIzM,UAAU,uBACVS,QAAS,WACL,EAAKkC,SAAS,CACV8J,YAAa,gBAEjBxB,GAAQ,2BAAQ,QAIA,gBAA3B1I,KAAKxC,MAAM0M,aACR,uBACIzM,UAAU,6BACVS,QAAS,WACL,EAAKkC,SAAS,CACV8J,YAAa,WAEjBxB,GAAQ,2BAAQ,QAIA,WAA3B1I,KAAKxC,MAAM0M,aACR,uBACIzM,UAAU,4BACVS,QAAS,WACL,EAAKkC,SAAS,CACV8J,YAAa,cAEjBxB,GAAQ,2BAAQ,QAI5B,uBACIjL,UAAU,qCACVS,QAAS,kBAAM,EAAKsO,aAAa,MAErC,uBACItO,QAAS,kBAAM,EAAKgQ,QAAQ,IAC5BzQ,UACIuC,KAAKxC,MAAMmM,OACL,wBACA,yBAGd,uBACIlM,UAAU,iCACVS,QAAS,kBAAM,EAAKsO,YAAY,MAEpC,uBACI/O,UAAU,6BACVS,QAAS,kBAAM,EAAKiQ,kBAKpC,wBACItF,OAAK,EACLmG,QAAShP,KAAKxC,MAAM8M,UACpB2E,QAAS,kBAAM,EAAKd,aACpBe,cAAc,YAEd,yBAAKzR,UAAU,iBACX,uBACI0R,aAAc,kBACV,yBAAK1R,UAAU,SACX,yBAAKA,UAAU,QAEP,cADH,EAAKD,MAAM0M,aAEJ,oCACI,uBACIzM,UAAU,uBACVS,QAAS,WACL,EAAKkC,SAAS,CACV8J,YACI,mBANpB,4BAcJ,gBADH,EAAK1M,MAAM0M,aAEJ,oCACI,uBACIzM,UAAU,6BACVS,QAAS,WACL,EAAKkC,SAAS,CACV8J,YACI,cANpB,4BAcJ,WADH,EAAK1M,MAAM0M,aAEJ,oCACI,uBACIzM,UAAU,4BACVS,QAAS,WACL,EAAKkC,SAAS,CACV8J,YACI,iBANpB,6BAcZ,uBACIzM,UAAU,uBACVS,QAAS,kBAAM,EAAKiQ,iBAIhC1Q,UAAU,cAEV,yBACIA,UAAU,MACVqK,IAAK,SAAAC,GAAG,OAAK,EAAK6F,SAAW7F,IAE7B,6BACK/H,KAAKxC,MAAMoM,UAAU7I,KAAI,SAACb,EAAMc,GAAP,OACtB,kBAAC,GAAD,CACIjD,IAAKiD,EACL9C,QAAS,kBAAM,EAAKkC,SAAS,CAAEY,UAAS,WACpC,EAAKuK,mBAGT,0BAAMvN,MAAO,CAAEkH,MAAO,EAAK1H,MAAMwD,QAAUA,EAAQ,UAAY,YAC3D,uBACIvD,UAAU,uBACVO,MAAO,CACHmL,QACI,EAAK3L,MAAMwD,QACPA,EACE,EACA,KAGjBd,EAAKmB,KAXV,MAWmBnB,EAAKyH,QAExB,yBAAKlK,UAAU,OACX,uBAAGA,UAAU,2BACb,uBAAGA,UAAU,+C,GAzhBtBa,IAAMC,W,qCEJ7C,IAAMyE,GAAO,IAAKA,KACZe,GAAQf,GAAKe,MACfqL,GAAS,KAEQC,G,2MACjB7R,MAAQ,CACJ8R,SAAU,GACVvR,IAAK,GACLwR,WAAY,GACZC,WAAY,GACZC,UAAW,GACXC,UAAW,I,mFAEM,IAAD,OAChB1H,YAAW,WACP,EAAK5H,SAAS,CACVkP,SAAU,CACNrI,UAAW,qBAGpB,GACS1G,SAASC,eAAe,SAC9BmP,QACN,IAAIlP,IAAQT,KAAKqP,OAAQ,CACrB3O,OAAO,IAEXsH,YAAW,WACP,EAAKqH,OAAOrR,MAAMiI,gBAAkB,YACrC,KACHjG,KAAK4P,iB,8KCxBFnR,EAAQ,CACXkB,OAAQ,MACRC,IAAK,gB,OD2BGO,E,OACJH,KAAKI,SAAS,CAAEsP,UAAWvP,EAAIE,OAAOwP,O,gDAEtChP,QAAQC,IAAR,M,gJAII,IAAD,OACHsO,IACAU,cAAcV,IAElBA,GAASpH,YAAW,WAChB8H,cAAcV,IACV,EAAKW,MAAMC,MAAMC,OAAOzL,OAAS,EACjC,EAAKpE,SAAS,CAAErC,IAAK,EAAKgS,MAAMC,QAAS,WACrC,EAAKE,YAAY,EAAK1S,MAAMO,QAGhC,EAAKqC,SAAS,CAAEmP,WAAY,KAEhC,EAAKY,IAAInS,MAAMiJ,UAAY,kBAC5B,O,2EAGWlJ,G,gGChEXU,EAAQ,CACXkB,OAAQ,MACRC,IAAK,UACLC,OAAO,CACHuQ,SD8D4BrS,K,OAAxBoC,E,OACJH,KAAKF,YAAYK,EAAIE,OAAOgQ,MAAM,GAAG3Q,IACrCM,KAAK+C,cAAc5C,EAAIE,OAAOgQ,MAAM,GAAG1M,QAAQ,GAAGjE,IAClDM,KAAKI,SAAS,CAAEmP,WAAYpP,EAAIE,OAAOgQ,Q,gDAEvCxP,QAAQC,IAAR,M,6LAIYpB,G,gGAEIqD,EAAcrD,G,cAA1BS,E,OACJH,KAAKI,SAAS,CAAEoP,WAAYrP,EAAImI,S,kBACzBnI,EAAImI,Q,gCAEXzH,QAAQC,IAAR,M,2LAIUpB,G,gGAEMI,EAAYJ,G,OAAxBS,E,OACJH,KAAKI,SAAS,CAAEqP,UAAWtP,EAAIsP,Y,gDAE/B5O,QAAQC,IAAR,M,2IAIHsD,EAAMpD,EAAMsG,GACb,IACI,IAAI7C,EAAM,GACVL,EAAKE,SAAQ,SAACpE,EAAMmD,GAChBoB,EAAIpG,KAAK,CACLqB,GAAIQ,EAAKR,GACT2B,KAAMnB,EAAKmB,KACXsG,OAAQzH,EAAKyD,QAAQ,GAAGtC,KACxBkG,MACIrH,EAAKyD,QACDrC,KAAKmG,MAAMnG,KAAKoG,SAAWxH,EAAKyD,QAAQa,SAC1C9E,QAGd4G,GAAMC,SAASqB,SAAShB,GAAW,CAAExC,KAAMK,EAAKzD,QAAO6G,KAAMP,KAC/D,MAAOnI,GACL0B,QAAQC,IAAI3B,M,+BAGV,IAAD,OACL,OACI,yBAAK1B,UAAU,SAASqK,IAAK,SAAAC,GAAG,OAAK,EAAKsH,OAAStH,IAC/C,yBACItK,UAAU,MACVqK,IAAK,SAAAC,GAAG,OAAK,EAAKoI,IAAMpI,GACxB/J,MAAOgC,KAAKxC,MAAM8R,UAEjBtP,KAAKxC,MAAM+R,WAAW/K,OAAS,GAC5B,yBAAK/G,UAAU,WACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,SAAf,4BACA,kBAAC,GAAD,CACIqG,MAAO9D,KAAKxC,MAAMgS,WAAWrO,OAC7BjD,QAAS,WACL,EAAKC,MAAMC,QAAQC,KAAnB,yBACsB,EAAKb,MAAMgS,WAAW9P,OAI/CM,KAAKxC,MAAMgS,WAAWnO,OAG/B,yBAAK5D,UAAU,gBACX,yBAAKA,UAAU,SAAf,4BACA,2BACKuC,KAAKxC,MAAMiS,UAAU1O,KAAI,SAACb,EAAMc,GAC7B,OACI,kBAAC,GAAD,CACIjD,IAAKiD,EACL8C,MAAO5D,EAAK2E,YACZ3G,QAAS,WACL,EAAKC,MAAMC,QAAQC,KACf,aAAe6B,EAAKR,MAI3BQ,EAAKmB,WAM1B,yBAAK5D,UAAU,YACX,2BACKuC,KAAKxC,MAAM+R,WAAWxO,KACnB,SAACb,EAAMc,GACH,OACI,kBAAC,GAAD,CACI9C,QAAS,SAACoJ,GAAD,OACL,EAAKa,KACD,EAAK3K,MACA+R,WACLvO,EACAsG,IAGRvJ,IAAKiD,GAEJd,EAAKmB,KACN,kBAAC,GAAD,KACKnB,EAAKyD,QAAQ,GAAGtC,KADrB,KAC6B,IACxBnB,EAAKoQ,MAAMjP,aAWd,IAAjCrB,KAAKxC,MAAM+R,WAAW/K,QACnB,yBAAK/G,UAAU,UACX,yBAAKA,UAAU,SAAf,4BACA,yBAAKA,UAAU,WACVuC,KAAKxC,MAAMkS,UAAU3O,KAAI,SAACb,EAAMc,GAC7B,OACI,wBAAKuP,YAAU,QAAQxS,IAAKiD,GACxB,yBACI9C,QAAS,WACL,EAAKgS,YACDhQ,EAAKsQ,OAET,EAAKT,MAAMC,MACP9P,EAAKsQ,MACT,EAAKpQ,SAAS,CACVrC,IAAKmC,EAAKsQ,UAIjBtQ,EAAKsQ,cAUtC,yBAAK/S,UAAU,YAAYO,MAAOgC,KAAKxC,MAAM8R,UACzC,uBACI7R,UAAU,gCACVS,QAAS,WACL,EAAKmR,OAAOrR,MAAMiI,gBAAkB,GACpC,EAAK7F,SAAS,CACVkP,SAAU,CAAErI,UAAW,sBAE3Be,YAAW,WACP,EAAK7J,MAAMC,QAAQ6J,IAAI,KACxB,QAGX,2BACIrK,KAAK,OACL8B,GAAG,QACH+Q,YAAY,+DACZ3I,IAAK,SAAAC,GAAG,OAAK,EAAKgI,MAAQhI,GAC1B2I,SAAU,kBAAM,EAAKA,cAExB1Q,KAAKxC,MAAMO,IAAIkS,OAAOzL,OAAS,GAC5B,uBACI/G,UAAU,uBACVS,QAAS,WACL,EAAK6R,MAAMC,MAAQ,GACnB,EAAK5P,SAAS,CAAErC,IAAK,KACrB,EAAKqC,SAAS,CAAEmP,WAAY,c,GAvOxBjR,IAAMC,WEJrBoS,I,kNACjBnT,MAAQ,CACJoT,KAAM,M,mFAEW,IAAD,OACX,wCAAwCC,KAAKC,UAAUC,YACxD/Q,KAAKI,SAAS,CAAEwQ,KAAM,OAE1BpO,OAAOgI,iBAAiB,UAAU,WAC9BxC,YAAW,WACH,wCAAwC6I,KAAKC,UAAUC,YAC/B,OAApB,EAAKvT,MAAMoT,MACXpO,OAAOwO,SAASC,WAGzB,U,+BAIP,OACI,6BACI,yBAAKxT,UAAU,OACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOyT,KAAK,IAAIC,UAAWC,KAC3B,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOF,KAAK,gBAAgBC,UAAWE,KACvC,kBAAC,IAAD,CAAOH,KAAK,qBAAqBC,UAAWG,KAC5C,kBAAC,IAAD,CAAOJ,KAAK,UAAUC,UAAWI,OAGzC,kBAAC,GAAD,Y,GA9BajT,IAAMC,YCGnBiT,QACW,cAA7BhP,OAAOwO,SAASS,UAEe,UAA7BjP,OAAOwO,SAASS,UAEhBjP,OAAOwO,SAASS,SAASrK,MACvB,2D,OCVNsK,IAASC,OAAO,kBAAC,GAAD,MAASpR,SAASC,eAAe,SDyH3C,kBAAmBsQ,WACrBA,UAAUc,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.b1fe67bb.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavBar, Icon } from 'antd-mobile';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport './index.scss'\r\n\r\nclass topBar extends React.Component {\r\n    state = {};\r\n    render() {\r\n        return (\r\n            <div className=\"topBar\">\r\n                <NavBar\r\n                    mode=\"light\"\r\n                    icon={<Icon type=\"ellipsis\" />}\r\n                    onLeftClick={() => {}}\r\n                    rightContent={[\r\n                        <Icon\r\n                            key=\"0\"\r\n                            type=\"search\"\r\n                            style={{ marginRight: '16px' }}\r\n                            onClick={() => {\r\n                                this.props.history.push('/search');\r\n                            }}\r\n                        />\r\n                    ]}\r\n                >\r\n                    云音乐\r\n                </NavBar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(topBar)\r\n","import axios from 'axios';\r\n\r\n\r\nvar request = axios.create({\r\n    baseURL: 'https://autumnfish.cn'\r\n});\r\n//配置axios全局配置\r\nrequest.defaults.transformResponse = [\r\n    data => {\r\n        // 在传递给 then/catch 前，把返回的大数字做安全处理\r\n        return data;\r\n    }\r\n];\r\n\r\n// 添加请求拦截器\r\nrequest.interceptors.request.use(\r\n    config => {\r\n        return config;\r\n    },\r\n    err => {\r\n        return Promise.reject(err);\r\n    }\r\n);\r\n\r\n// 添加响应拦截器\r\nrequest.interceptors.response.use(\r\n    response => {\r\n        return JSON.parse(response.data);\r\n    },\r\n    err => {\r\n        return Promise.reject(err);\r\n    }\r\n);\r\n\r\nexport default request\r\n","import request from '../utils/request';\r\n\r\nfunction getHotSongMenu() {\r\n    return request({\r\n        method: 'get',\r\n        url: '/personalized'\r\n    });\r\n}\r\n\r\nfunction getDetails(id) {\r\n    return request({\r\n        method: 'get',\r\n        url: '/playlist/detail',\r\n        params:{id}\r\n    });\r\n}\r\n\r\nfunction getPlaylist(id) {\r\n    return request({\r\n        method: 'get',\r\n        url: '/simi/playlist',\r\n        params:{id}\r\n    });\r\n}\r\n\r\n\r\nexport {\r\n    getHotSongMenu,\r\n    getDetails,\r\n    getPlaylist\r\n}","import React from 'react';\r\nimport './index.css';\r\nimport { getHotSongMenu } from '../../../../../api/song_menu';\r\nimport BScroll from '@better-scroll/core';\r\nimport { List } from 'antd-mobile';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass songList extends React.Component {\r\n    state = {\r\n        songList: [],\r\n    };\r\n    componentDidMount() {\r\n        this.getSongList();\r\n    }\r\n    songMenu(item) {\r\n        this.props.history.push('/songMenu/' + item.id);\r\n    }\r\n    async getSongList() {\r\n        try {\r\n            let res = await getHotSongMenu();\r\n            this.setState(\r\n                {\r\n                    songList: res.result\r\n                },\r\n                () => {\r\n                    let recommend = document.getElementById('recommend');\r\n                    new BScroll(recommend, {\r\n                        click: true,\r\n                        bounce: {\r\n                            top: false\r\n                        }\r\n                        \r\n                    });\r\n                }\r\n            );\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"songList\">\r\n                <div className=\"title\">推荐歌单</div>\r\n                <List>\r\n                    <ul>\r\n                        {this.state.songList.map((item, index) => {\r\n                            return (\r\n                                <li\r\n                                    key={index}\r\n                                    onClick={() => this.songMenu(item)}\r\n                                >\r\n                                    <div className=\"imgBox\">\r\n                                        <img src={item.picUrl} alt=\"\" />\r\n                                    </div>\r\n                                    <div>{item.name}</div>\r\n                                    <i className=\"iconfont icon-kefu\">\r\n                                        {' '}\r\n                                        {Math.ceil(item.playCount / 10000)}万\r\n                                    </i>\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                </List>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(songList)\r\n","import React from 'react';\r\nimport './index.css';\r\nimport { Carousel, WingBlank } from 'antd-mobile';\r\nimport SongList from './songList';\r\nimport { getBanner } from '../../../../api/banner';\r\n\r\nexport default class recommend extends React.Component {\r\n    state = {\r\n        bannerList: []\r\n    };\r\n    componentDidMount() {\r\n        this.getBanners();\r\n    }\r\n    async getBanners() {\r\n        try {\r\n            let res = await getBanner({\r\n                type: 1\r\n            });\r\n            this.setState({\r\n                bannerList: res.banners\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"recommend\" id=\"recommend\">\r\n                <div>\r\n                    <div className=\"bg\"></div>\r\n                    <div className=\"carousel\">\r\n                        <WingBlank>\r\n                            <Carousel\r\n                                autoplay={true}\r\n                                infinite\r\n                                beforeChange={(from, to) => {}}\r\n                                afterChange={index => {}}\r\n                            >\r\n                                {this.state.bannerList.map((item, index) => (\r\n                                    <div\r\n                                        key={index}\r\n                                        style={{\r\n                                            display: 'inline-block',\r\n                                            width: '100%',\r\n                                            height: 150\r\n                                        }}\r\n                                    >\r\n                                        <img\r\n                                            src={item.imageUrl}\r\n                                            alt=\"\"\r\n                                            style={{\r\n                                                width: '100%',\r\n                                                height: '150px',\r\n                                                verticalAlign: 'top'\r\n                                            }}\r\n                                            onLoad={() => {\r\n                                                // fire window resize event to change height\r\n                                                window.dispatchEvent(\r\n                                                    new Event('resize')\r\n                                                );\r\n                                                this.setState({\r\n                                                    imgHeight: 'auto'\r\n                                                });\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                ))}\r\n                            </Carousel>\r\n                        </WingBlank>\r\n                    </div>\r\n                    <div className=\"song-list\">\r\n                        <SongList />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import request from '../utils/request';\r\n\r\nfunction getBanner(type) {\r\n    return request({\r\n        method: 'get',\r\n        url: '/banner',\r\n        params:{\r\n            type\r\n        }\r\n    });\r\n}\r\n\r\nexport {\r\n    getBanner\r\n}","import request from '../utils/request';\r\n\r\nfunction singerType({cat,initial}) {\r\n    return request({\r\n        method: 'get',\r\n        url: '/artist/list',\r\n        params:{\r\n            cat,\r\n            initial\r\n        }\r\n    });\r\n}\r\n\r\nfunction getSongList({id}) {\r\n    return request({\r\n        method: 'get',\r\n        url: '/artists',\r\n        params:{\r\n            id\r\n        }\r\n    });\r\n}\r\nfunction getSingerDesc(id) {\r\n    return request({\r\n        method: 'get',\r\n        url: '/artist/album',\r\n        params:{\r\n            id\r\n        }\r\n    });\r\n}\r\n\r\nexport {\r\n    singerType,\r\n    getSongList,\r\n    getSingerDesc\r\n}","import React from 'react';\r\nimport BScroll from '@better-scroll/core';\r\nimport './index.css';\r\nimport { List } from 'antd-mobile';\r\nimport { singerType } from '../../../../api/singer';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst Item = List.Item;\r\n\r\nclass singer extends React.Component {\r\n    state = {\r\n        index: null,\r\n        letterIndex: null,\r\n        data: [\r\n            { name: '入驻歌手', index: 5001 },\r\n            { name: '华语男歌手', index: 1001 },\r\n            { name: '华语女歌手', index: 1002 },\r\n            { name: '华语组合', index: 1003 },\r\n            { name: '欧美男歌手', index: 2001 },\r\n            { name: '欧美女歌手', index: 2002 },\r\n            { name: '欧美组合', index: 2003 },\r\n            { name: '日本男歌手', index: 6001 },\r\n            { name: '日本女歌手', index: 6002 },\r\n            { name: '日本组合', index: 6003 },\r\n            { name: '韩国男歌手', index: 7001 },\r\n            { name: '韩国女歌手', index: 7002 },\r\n            { name: '韩国组合', index: 7003 },\r\n            { name: '其他男歌手', index: 4001 },\r\n            { name: '其他女歌手', index: 4002 },\r\n            { name: '其他组合', index: 4003 }\r\n        ],\r\n\r\n        letter: [\r\n            'A',\r\n            'B',\r\n            'C',\r\n            'D',\r\n            'E',\r\n            'F',\r\n            'G',\r\n            'H',\r\n            'I',\r\n            'J',\r\n            'K',\r\n            'L',\r\n            'M',\r\n            'N',\r\n            'O',\r\n            'P',\r\n            'Q'\r\n        ],\r\n        singerList: []\r\n    };\r\n    screen(_index) {\r\n        this.setState({ index: _index });\r\n        this.loadList({\r\n            cat: this.state.data[_index].index,\r\n            initial:\r\n                this.state.letterIndex !== null\r\n                    ? this.state.letter[this.state.letterIndex]\r\n                    : undefined\r\n        });\r\n        this.setState({ singerList: [] });\r\n    }\r\n    letterScreen(_index) {\r\n        this.setState({ letterIndex: _index });\r\n        this.loadList({\r\n            cat:\r\n                this.state.index !== null\r\n                    ? this.state.data[this.state.index].index\r\n                    : undefined,\r\n            initial: this.state.letter[_index]\r\n        });\r\n        this.setState({ singerList: [] });\r\n    }\r\n    async componentDidMount() {\r\n        let classify = document.getElementById('classify');\r\n        new BScroll(classify, { click: true, scrollX: true, scrollY: false });\r\n        let letter = document.getElementById('letter');\r\n        new BScroll(letter, { click: true, scrollX: true, scrollY: false });\r\n        this.loadList({ cat: 1001 });\r\n    }\r\n\r\n    async loadList({ cat, initial }) {\r\n        try {\r\n            let res = await singerType({ cat, initial });\r\n            this.setState({ singerList: res.artists });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"singer\">\r\n                <div id=\"classify\" className=\"classify\">\r\n                    <ul>\r\n                        <li className=\"title\">分类(默认热门):</li>\r\n                        {this.state.data.map((item, index) => {\r\n                            return (\r\n                                <li\r\n                                    onClick={() => this.screen(index)}\r\n                                    key={index}\r\n                                    className={\r\n                                        index === this.state.index\r\n                                            ? 'activate'\r\n                                            : ''\r\n                                    }\r\n                                >\r\n                                    {item.name}\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"letter\" id=\"letter\">\r\n                    <ul>\r\n                        <li className=\"title\">首字母:</li>\r\n                        {this.state.letter.map((item, index) => {\r\n                            return (\r\n                                <li\r\n                                    onClick={() => this.letterScreen(index)}\r\n                                    key={index}\r\n                                    className={\r\n                                        index === this.state.letterIndex\r\n                                            ? 'letter-activate'\r\n                                            : ''\r\n                                    }\r\n                                >\r\n                                    {item}\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"list\">\r\n                    <List>\r\n                        {this.state.singerList.map((item, index) => {\r\n                            return (\r\n                                <div className=\"item\" key={index}>\r\n                                    <Item\r\n                                        thumb={item.picUrl}\r\n                                        onClick={() => {\r\n                                            this.props.history.push(\r\n                                                `/singerDetails/${item.id}`\r\n                                            );\r\n                                        }}\r\n                                    >\r\n                                        {item.name}\r\n                                    </Item>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </List>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(singer)\r\n","import React from 'react';\r\nimport './index.scss';\r\nimport { List, Grid } from 'antd-mobile';\r\nimport { getRanking } from '../../../../api/ranking';\r\nimport { getDetails } from '../../../../api/song_menu';\r\nimport { withRouter } from \"react-router-dom\";\r\nconst Item = List.Item;\r\nconst Brief = Item.Brief;\r\n\r\nclass ranking extends React.Component {\r\n    state = {\r\n        data: [1, 2, 3, 4, 5],\r\n        authorityList: [],\r\n        globalList: []\r\n    };\r\n    componentDidMount() {\r\n        this.getRanking();\r\n    }\r\n    async getRanking() {\r\n        try {\r\n            let res = await getRanking();\r\n            this.setState({ authorityList: res.list.slice(0, 4) }, () => {\r\n                this.state.authorityList.forEach((item,index) => {\r\n                    this.getSongMenu(item.id,index);\r\n                });\r\n            });\r\n            this.setState({ globalList: res.list.slice(4, res.list.length) });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    async getSongMenu(id,index) {\r\n        try {\r\n            let res = await getDetails(id);\r\n            let arr = this.state.authorityList;\r\n            arr[index].tags=res.playlist.tracks.slice(0,3);\r\n            this.setState({authorityList:arr});\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    songMenu(item) {\r\n        this.props.history.push('/songMenu/' + item.id)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"ranking\">\r\n                <div className=\"box\">\r\n                    <div className=\"authority\">\r\n                        <div className=\"title\">官方榜</div>\r\n                        <List>\r\n                            {this.state.authorityList.map((item, index) => {\r\n                                return (\r\n                                    <Item\r\n                                        key={index}\r\n                                        thumb={item.coverImgUrl}\r\n                                        onClick={() => {\r\n                                            this.songMenu(item);\r\n                                        }}\r\n                                    >\r\n                                        {this.state.authorityList[index].tags.map((item,index) => {\r\n                                            return <Brief key={index}>{index+1}. {item.name}</Brief>\r\n                                        })}\r\n                                    </Item>\r\n                                );\r\n                            })}\r\n                        </List>\r\n                    </div>\r\n                    <div className=\"global\">\r\n                        <div className=\"title\">全球榜</div>\r\n                        <Grid\r\n                            hasLine={false}\r\n                            data={this.state.globalList}\r\n                            columnNum={3}\r\n                            renderItem={item => (\r\n                                <div onClick={()=>{this.songMenu(item);}}>\r\n                                    <img\r\n                                        src={item.coverImgUrl}\r\n                                        style={{\r\n                                            width: '100%',\r\n                                            height: '100%',\r\n                                            borderRadius: '5px'\r\n                                        }}\r\n                                        alt=\"\"\r\n                                    />\r\n                                    <div\r\n                                        style={{\r\n                                            color: '#888',\r\n                                            fontSize: '14px',\r\n                                            marginTop: '12px'\r\n                                        }}\r\n                                    >\r\n                                        <span>{item.updateFrequency}</span>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(ranking)","import request from '../utils/request';\r\n\r\nfunction getRanking() {\r\n    return request({\r\n        method: 'get',\r\n        url: '/toplist'\r\n    });\r\n}\r\n\r\nexport {\r\n    getRanking\r\n}","import React from 'react';\r\nimport TopBar from './components/topBar';\r\nimport './index.scss';\r\nimport { Tabs, WhiteSpace } from 'antd-mobile';\r\nimport Recommend from './components/recommend';\r\nimport Singer from './components/singer';\r\nimport Ranking from './components/ranking';\r\n\r\nconst tabs = [\r\n    { title: '推荐', sub: '1' },\r\n    { title: '歌手', sub: '2' },\r\n    { title: '排行榜', sub: '3' }\r\n];\r\n\r\nexport default class home extends React.Component {\r\n    state = {};\r\n    render() {\r\n        return (\r\n            <div className=\"home\">\r\n                <TopBar />\r\n                <Tabs\r\n                    tabs={tabs}\r\n                    initialPage={0}\r\n                    tabBarBackgroundColor=\"#d44439\"\r\n                    tabBarInactiveTextColor=\"#e4e4e4\"\r\n                    tabBarActiveTextColor=\"#f1f1f1\"\r\n                    swipeable={false}\r\n                >\r\n                    <div className=\"tabBox\">\r\n                        <Recommend />\r\n                    </div>\r\n                    <div\r\n                        style={{\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            height: '150px',\r\n                            backgroundColor: '#f2f3f4'\r\n                        }}\r\n                    >\r\n                        <div className=\"tabBox\">\r\n                            <Singer />\r\n                        </div>\r\n                    </div>\r\n                    <div\r\n                        style={{\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            height: '150px',\r\n                            backgroundColor: '#f2f3f4'\r\n                        }}\r\n                    >\r\n                        <div className=\"tabBox\">\r\n                            <Ranking />\r\n                        </div>\r\n                    </div>\r\n                </Tabs>\r\n                <WhiteSpace />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export const SET_MUC_DATA = 'SET_MUC_DATA'","import { createStore, applyMiddleware, compose } from 'redux';\r\n\r\nimport thunk from 'redux-thunk';\r\nimport { musicUrl } from './reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = {\r\n    musicUrl: createStore(musicUrl, composeEnhancers(applyMiddleware(thunk)))\r\n};\r\n\r\nexport default store;","import {SET_MUC_DATA} from './actionType';\r\n\r\nfunction musicUrl(data, action) {\r\n    switch (action.type) {\r\n        case SET_MUC_DATA:\r\n            return data = action.data;\r\n        default:\r\n            return data;\r\n    }\r\n}\r\n\r\nexport { musicUrl };\r\n\r\n","import {SET_MUC_DATA} from './actionType';\r\n\r\nexport const setMucData = (data) => {\r\n    return {\r\n        type:SET_MUC_DATA,\r\n        data\r\n    }\r\n}\r\n\r\nexport const addAsync = data => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(setMucData(data))\r\n        }, 2000);\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './index.css';\r\nimport { NavBar, Icon, List, Button } from 'antd-mobile';\r\nimport { getDetails } from '../../api/song_menu';\r\nimport BScroll from '@better-scroll/core';\r\nimport store from '../../redux';\r\nimport {setMucData} from '../../redux/actionCreator';\r\nconst Item = List.Item;\r\nconst Brief = Item.Brief;\r\n\r\nexport default class songMenu extends React.Component {\r\n    state = {\r\n        data: {\r\n            name: '歌单',\r\n            tracks: [],\r\n            subscribedCount: 0,\r\n            coverImgUrl:\r\n                'http://img3.imgtn.bdimg.com/it/u=1105085267,629346802&fm=26&gp=0.jpg'\r\n        },\r\n        bgStyle: {\r\n            backgroundImage:\r\n                'url(\"http://img3.imgtn.bdimg.com/it/u=1105085267,629346802&fm=26&gp=0.jpg\")'\r\n        },\r\n        show: {}\r\n    };\r\n    async componentDidMount() {\r\n        this.setState({ show: { transform: 'rotate(0deg)' } });\r\n        document.documentElement.scrollTop = 0;\r\n        try {\r\n            let res = await getDetails(this.props.match.params.id);\r\n            this.setState({ data: res.playlist }, () => {\r\n                let songMenuList = document.getElementById('songMenuList');\r\n                new BScroll(songMenuList, {\r\n                    click: true,\r\n                    bounce: {\r\n                        top: false\r\n                    }\r\n                });\r\n            });\r\n            this.setState({\r\n                bgStyle: {\r\n                    backgroundImage: `url(\"${res.playlist.coverImgUrl}\")`\r\n                }\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    // 播放音乐\r\n    play(list, index, e) {\r\n        let arr = [];\r\n        list.forEach(item => {\r\n            arr.push({\r\n                id: item.id,\r\n                name: item.name,\r\n                artId: item.ar[Math.floor(Math.random() * item.ar.length)].id,\r\n                arName: item.ar[0].name\r\n            });\r\n        });\r\n        store.musicUrl.dispatch(setMucData({ list: arr, index, even: e }))\r\n    }\r\n    render() {\r\n        return (\r\n            <div\r\n                id=\"songMenu\"\r\n                className=\"songMenu\"\r\n                ref={val => (this.songMenu = val)}\r\n                style={this.state.show}\r\n            >\r\n                <div className=\"cover\">\r\n                    <div className=\"bg\" style={this.state.bgStyle}></div>\r\n                    <div className=\"content\">\r\n                        <NavBar\r\n                            mode=\"light\"\r\n                            icon={<Icon type=\"left\" />}\r\n                            onLeftClick={() => {\r\n                                this.setState({\r\n                                    show: { transform: 'rotate(-90deg)' }\r\n                                });\r\n                                setTimeout(() => {\r\n                                    this.props.history.go(-1);\r\n                                }, 400);\r\n                            }}\r\n                            leftContent={\r\n                                <span className=\"title\">\r\n                                    {this.state.data.name}\r\n                                </span>\r\n                            }\r\n                        ></NavBar>\r\n                        <div className=\"synopsis\">\r\n                            <img src={this.state.data.coverImgUrl} alt=\"\" />\r\n                            <div>\r\n                                <div className=\"title\">\r\n                                    {this.state.data.name}\r\n                                </div>\r\n                                <div className=\"text\">\r\n                                    <img\r\n                                        src=\"http://p1.music.126.net/QWMV-Ru_6149AKe0mCBXKg==/1420569024374784.jpg\"\r\n                                        alt=\"\"\r\n                                    />\r\n                                    网易云音乐\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"praise\">\r\n                            <ul>\r\n                                <li>\r\n                                    <i className=\"iconfont icon-wodefankui\"></i>\r\n                                    <span>评论</span>\r\n                                </li>\r\n                                <li>\r\n                                    <i className=\"iconfont icon-shoucang\"></i>\r\n                                    <span>点赞</span>\r\n                                </li>\r\n                                <li>\r\n                                    <i className=\"iconfont icon-add\"></i>\r\n                                    <span>收藏</span>\r\n                                </li>\r\n                                <li>\r\n                                    <i className=\"iconfont icon-icon_threeline_fill\"></i>\r\n                                    <span>更多</span>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"songMenuList\" className=\"songMenuList\">\r\n                    <List>\r\n                        <div className=\"title\">\r\n                            <div>\r\n                                <i\r\n                                    className=\"iconfont icon-bofang\"\r\n                                    onClick={e =>\r\n                                        this.play(this.state.data.tracks, 0, e)\r\n                                    }\r\n                                ></i>\r\n                                <span>\r\n                                    播放全部\r\n                                    <span>\r\n                                        {' '}\r\n                                        (共{this.state.data.tracks.length}\r\n                                        首)\r\n                                    </span>\r\n                                </span>\r\n                            </div>\r\n                            <Button>\r\n                                <i className=\"iconfont icon-add\"></i> 收藏\r\n                                <span className=\"num\">\r\n                                    (\r\n                                    {Math.ceil(\r\n                                        this.state.data.subscribedCount / 1000\r\n                                    ) / 10}\r\n                                    万)\r\n                                </span>\r\n                            </Button>\r\n                        </div>\r\n                        {this.state.data.tracks.map((item, index) => {\r\n                            return (\r\n                                <div className=\"box\" key={index}>\r\n                                    <span className=\"index\">{index + 1}</span>\r\n                                    <Item\r\n                                        multipleLine\r\n                                        onClick={e =>\r\n                                            this.play(\r\n                                                this.state.data.tracks,\r\n                                                index,\r\n                                                e\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        {item.name}{' '}\r\n                                        <Brief>{item.ar[0].name}</Brief>\r\n                                    </Item>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </List>\r\n\r\n                    {this.state.data.tracks.length === 0 && (\r\n                        <Icon type=\"loading\" />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './index.scss';\r\nimport { Icon, Button, List } from 'antd-mobile';\r\nimport { getSongList } from '../../api/singer';\r\nimport BScroll from '@better-scroll/core';\r\nimport store from '../../redux';\r\nimport {setMucData} from '../../redux/actionCreator';\r\nconst Item = List.Item;\r\nconst Brief = Item.Brief;\r\n\r\nexport default class singerDetails extends React.Component {\r\n    state = {\r\n        songList: {\r\n            artist: {\r\n                picUrl:\r\n                    'http://img3.imgtn.bdimg.com/it/u=1105085267,629346802&fm=26&gp=0.jpg',\r\n                name: '歌单'\r\n            },\r\n            hotSongs: []\r\n        },\r\n        show: {}\r\n    };\r\n    componentDidMount() {\r\n        this.getSongList();\r\n        setTimeout(() => {\r\n            this.setState({ show: { transform: 'rotate(0deg)' } });\r\n        }, 0);\r\n    }\r\n    async getSongList() {\r\n        try {\r\n            let res = await getSongList({\r\n                id: this.props.match.params.id\r\n            });\r\n            this.setState({ songList: res }, () => {\r\n                let songMenuList = document.getElementById('songMenuList');\r\n                new BScroll(songMenuList, {\r\n                    click: true,\r\n                    bounce: {\r\n                        top: false\r\n                    }\r\n                });\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    // 播放音乐\r\n    play(list,index,e){\r\n        let arr = [];\r\n        list.forEach((item) => {\r\n            arr.push({\r\n                id:item.id,\r\n                name:item.name, \r\n                artId:item.ar[Math.floor(Math.random()*item.ar.length)].id,\r\n                arName:item.ar[0].name\r\n            });\r\n        });\r\n        store.musicUrl.dispatch(setMucData({ list: arr, index, even: e }))\r\n    }\r\n    render() {\r\n        return (\r\n            <div\r\n                id=\"singerDetails\"\r\n                className=\"singerDetails\"\r\n                style={this.state.show}\r\n            >\r\n                <div\r\n                    className=\"cover\"\r\n                    style={{\r\n                        backgroundImage: `url(${this.state.songList.artist.picUrl})`\r\n                    }}\r\n                >\r\n                    <Button className=\"btn\" inline type=\"warning\">\r\n                        <i className=\"iconfont icon-add\"> 收藏</i>\r\n                    </Button>\r\n                </div>\r\n                <div id=\"songMenuList\" className=\"songMenuList\">\r\n                    <List>\r\n                        <div className=\"title\">\r\n                            <div>\r\n                                <i className=\"iconfont icon-bofang\" onClick={(e) => this.play(this.state.songList.hotSongs,0,e)}></i>\r\n                                <span>\r\n                                    播放全部\r\n                                    <span>\r\n                                        {this.state.songList.hotSongs &&\r\n                                            `(共${this.state.songList.hotSongs.length}首)`}\r\n                                    </span>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        {this.state.songList.hotSongs.map((item, index) => {\r\n                            return (\r\n                                <div className=\"box\" key={index}>\r\n                                    <span className=\"index\">{index + 1}</span>\r\n                                    <Item multipleLine onClick={(e) => this.play(this.state.songList.hotSongs,index,e)}>\r\n                                        {item.name}\r\n                                        <Brief>\r\n                                            {item.ar[0].name} - {item.name}\r\n                                        </Brief>\r\n                                    </Item>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </List>\r\n\r\n                    {this.state.songList.hotSongs.length === 0 && (\r\n                        <Icon type=\"loading\" />\r\n                    )}\r\n                </div>\r\n\r\n                <div className=\"top\">\r\n                    <Icon\r\n                        type=\"left\"\r\n                        onClick={() => {\r\n                            this.setState({\r\n                                show: { transform: 'rotate(-90deg)' }\r\n                            });\r\n                            setTimeout(() => {\r\n                                this.props.history.go(-1);\r\n                            }, 400);\r\n                        }}\r\n                    />\r\n                    {this.state.songList.artist.name}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import request from '../utils/request';\r\n\r\nfunction getMusicUrl(id) {\r\n    return request({\r\n        method: 'get',\r\n        url: '/song/url',\r\n        params:{\r\n            id\r\n        }\r\n    });\r\n}\r\nfunction getMusicLyc(id) {\r\n    return request({\r\n        method: 'get',\r\n        url: '/lyric',\r\n        params:{\r\n            id\r\n        }\r\n    });\r\n}\r\n\r\nexport {\r\n    getMusicUrl,\r\n    getMusicLyc,\r\n\r\n}","function myToast(msg, tiem = 3000, type) {\r\n    let popup = document.createElement('div');\r\n    popup.innerText = msg;\r\n    document.body.append(popup);\r\n    popup.style.position = 'fixed';\r\n    popup.style.opacity = 0;\r\n    popup.style.left = '50%';\r\n    popup.style.textAlign='center';\r\n    switch (type) {\r\n        case 'top':\r\n            popup.style.top = '-5%';\r\n            popup.style.transform = 'translateX(-50%)';\r\n            setTimeout(() => {\r\n                popup.style.top = '2%';\r\n            }, 0);\r\n            break;\r\n        case 'bottom':\r\n            popup.style.top = '110%';\r\n            popup.style.transform = 'translateX(-50%)';\r\n            setTimeout(() => {\r\n                popup.style.top = '90%';\r\n            }, 0);\r\n            break;\r\n        default:\r\n            popup.style.top = '50%';\r\n            popup.style.transform = 'translateX(-50%) translateY(-50%)';\r\n            break;\r\n    }\r\n    popup.style.zIndex = 99999999999;\r\n    popup.style.transition = 'all .5s';\r\n    popup.style.padding = '8px 10px';\r\n    popup.style.backgroundColor = 'rgba(0,0,0,.7)';\r\n    popup.style.color = '#fff';\r\n    popup.style.borderRadius = '5px';\r\n    setTimeout(() => {\r\n        popup.style.opacity = 1;\r\n    }, 0);\r\n    setTimeout(() => {\r\n        popup.style.opacity = 0;\r\n    }, tiem);\r\n    setTimeout(() => {\r\n        document.body.removeChild(popup);\r\n    }, tiem + 500);\r\n}\r\nexport default myToast;\r\n","import React from 'react';\r\nimport './index.scss';\r\nimport { List, Icon, Modal } from 'antd-mobile';\r\nimport { getMusicUrl, getMusicLyc } from '../../api/music';\r\nimport { getSingerDesc } from '../../api/singer';\r\nimport BScroll from '@better-scroll/core';\r\nimport { playAnimation } from '../../utils/playAnimation';\r\nimport store from '../../redux';\r\nimport myToast from '../../utils/myToast';\r\n\r\nconst Item = List.Item;\r\nconst Brief = Item.Brief;\r\n\r\nexport default class playMusic extends React.Component {\r\n    state = {\r\n        isPlay: false,\r\n        musicUrl: '',\r\n        show: 0,\r\n        musicList: [],\r\n        index: 0,\r\n        picUrl: '',\r\n        musicName: '',\r\n        musicAr: '',\r\n        playLength: {\r\n            current: 0,\r\n            end: 0\r\n        },\r\n        platPattern: 'listCycle',\r\n        lycArr: null,\r\n        currentLyric: null,\r\n        isShowLyc: false,\r\n        popupShow: false,\r\n        isTouchDown: false\r\n    };\r\n    componentDidMount() {\r\n        window.addEventListener('touchmove', event => {\r\n            if (!this.state.isTouchDown) {\r\n                return;\r\n            }\r\n            var x =\r\n                event.changedTouches[0].clientX - this.progressBox.offsetLeft;\r\n            this.setProgress(x);\r\n        });\r\n        store.musicUrl.subscribe(() => {\r\n            let data = store.musicUrl.getState();\r\n            playAnimation(data.even);\r\n            this.setState({ musicList: data.list }, () => {\r\n                this.setState({ index: data.index }, () => {\r\n                    this.setMusicUrl();\r\n                });\r\n            });\r\n        })\r\n    }\r\n    //把歌词文本处理成合适的数组\r\n    lyricDispose(lyric) {\r\n        let arr = lyric.split('\\n'); //把歌词用/n分割成数组\r\n        let lyricArr = [];\r\n        for (let i = 0; i < arr.length; i++) {\r\n            if (!arr[i]) break;\r\n            let timeStr = arr[i].match(/\\[.*\\]/g)[0]; //获取时间字符串\r\n            timeStr = timeStr.substring(1, timeStr.length - 1);\r\n            let str = arr[i].replace(/\\[.*\\]/g, ''); //截取歌词字符串\r\n            let timeArr = timeStr.split(']['); //截取时间字符串,并且把同一项的多个时间分割成数组\r\n            for (let j = 0; j < timeArr.length; j++) {\r\n                //遍历时间数组\r\n                lyricArr.push({\r\n                    time:\r\n                        Number(timeArr[j].split(':')[1]) +\r\n                        Number(timeArr[j].split(':')[0]) * 60,\r\n                    str\r\n                }); //把每一个时间和对应的歌词push到数组中\r\n            }\r\n        }\r\n        return lyricArr.sort((a, b) => {\r\n            return a.time - b.time;\r\n        }); //把数组按照时间大小排序并返回\r\n    }\r\n    //设置音乐url\r\n    async setMusicUrl() {\r\n        this.setState({ musicUrl: '' })\r\n        this.progress.style.width = '';\r\n        try {\r\n            var res = await getMusicUrl(\r\n                this.state.musicList[this.state.index].id\r\n            );\r\n            if (res.data[0].url === null) {\r\n                myToast(`歌曲《${this.state.musicList[this.state.index].name}》暂无版权,播放失败!`, 2000)\r\n                this.MusicChange(1)\r\n            }\r\n            this.setState({ musicUrl: res.data[0].url }, () => {\r\n                if (this.state.show === 0) {\r\n                    this.setState({ show: 60 });\r\n                }\r\n            });\r\n            this.getSingerDesc(this.state.musicList[this.state.index].artId);\r\n            this.setState({\r\n                musicName: this.state.musicList[this.state.index].name\r\n            });\r\n            this.setState({\r\n                musicAr: this.state.musicList[this.state.index].arName\r\n            });\r\n            let lyc = await getMusicLyc(\r\n                this.state.musicList[this.state.index].id\r\n            );\r\n            if ('lrc' in lyc) {\r\n                this.setState({ lycArr: this.lyricDispose(lyc.lrc.lyric) });\r\n            } else {\r\n                this.setState({ lycArr: '' });\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    // 点击播放或暂停按钮\r\n    Playing(_this) {\r\n        let audio = document.getElementById('audio');\r\n        if (_this.state.isPlay) {\r\n            audio.pause();\r\n        } else {\r\n            audio.play();\r\n        }\r\n    }\r\n    // 显示详细播放模块\r\n    showAll(_this) {\r\n        _this.setState({ show: '100%' });\r\n        let tool = document.getElementsByClassName('tool')[0];\r\n        tool.style.display = 'none';\r\n    }\r\n    // 隐藏详细播放模块\r\n    unShowAll(_this) {\r\n        _this.setState({ show: 60 });\r\n        let tool = document.getElementsByClassName('tool')[0];\r\n        tool.style.display = 'flex';\r\n        tool.style.opacity = 0;\r\n        setTimeout(() => {\r\n            tool.style.opacity = 1;\r\n        }, 0);\r\n    }\r\n    //当音乐播放时\r\n    timeupdate(_this) {\r\n        let audio = document.getElementById('audio');\r\n        // 是否播放结束\r\n        if (audio.ended && this.state.platPattern !== 'singleCycle') {\r\n            this.MusicChange(1);\r\n            return;\r\n        }\r\n        let currentTime = '0:00';\r\n        let duration = '0:00';\r\n        if (audio.currentTime > 0) {\r\n            currentTime = Math.floor(audio.currentTime);\r\n            let m = Math.floor(currentTime / 60).toString();\r\n            let s = (currentTime % 60).toString();\r\n            currentTime = `${m}:${s.padStart(2, '0')}`;\r\n        }\r\n        if (audio.duration > 0) {\r\n            duration = Math.floor(audio.duration);\r\n            let m = Math.floor(duration / 60).toString();\r\n            let s = (duration % 60).toString();\r\n            duration = `${m}:${s.padStart(2, '0')}`;\r\n        }\r\n        _this.setState({\r\n            playLength: {\r\n                current: currentTime,\r\n                end: duration\r\n            }\r\n        });\r\n        if (!this.state.isTouchDown) {\r\n            let percentage = audio.currentTime / audio.duration;\r\n            this.progress.style.width =\r\n                percentage * this.progressBox.offsetWidth + 'px';\r\n        }\r\n        if (this.state.lycArr) {\r\n            // 调整歌词显示\r\n            let current = audio.currentTime + 0.3; //获取当前播放时间\r\n            for (let i = this.state.lycArr.length - 1; i >= 0; i--) {\r\n                //倒序遍历歌词数组\r\n                if (this.state.lycArr[i].time < current) {\r\n                    if (this.state.currentLyric !== i) {\r\n                        //数组下标i的时间小于当前时间时,设置当前显示的歌词为歌词数组的下标i\r\n                        this.lycBrief.innerText = this.state.lycArr[i].str;\r\n                        this.allLyc.style.top = -i * 50 + 'px';\r\n                    }\r\n                    this.setState({ currentLyric: i }); //设置当前显示的歌词下标\r\n                    return; //退出循环\r\n                }\r\n            }\r\n            // 如果上面循环未有结果,设置当前显示歌词为空,歌词滚动到初始位置\r\n            this.setState({ currentLyric: null });\r\n            this.allLyc.style.top = '50px';\r\n        }\r\n    }\r\n    // 获取歌手详情设置专辑封面\r\n    async getSingerDesc(id) {\r\n        try {\r\n            let res = await getSingerDesc(id);\r\n            this.setState({\r\n                picUrl: res.artist.picUrl\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    //单首音乐播放完毕\r\n    MusicChange(index) {\r\n        var _index = null;\r\n        switch (this.state.platPattern) {\r\n            case 'listCycle':\r\n            case 'singleCycle': {\r\n                if (index === 1) {\r\n                    if (this.state.index !== this.state.musicList.length - 1) {\r\n                        _index = this.state.index + 1;\r\n                    } else {\r\n                        _index = 0;\r\n                    }\r\n                }\r\n                if (index === -1) {\r\n                    if (this.state.index !== 0) {\r\n                        _index = this.state.index - 1;\r\n                    } else {\r\n                        _index = this.state.musicList.length - 1;\r\n                    }\r\n                }\r\n                this.setState({ index: _index }, () => {\r\n                    this.setMusicUrl();\r\n                });\r\n                break;\r\n            }\r\n            case 'random': {\r\n                _index = Math.floor(\r\n                    Math.random() * this.state.musicList.length\r\n                );\r\n                this.setState({ index: _index }, () => {\r\n                    this.setMusicUrl();\r\n                });\r\n                break;\r\n            }\r\n            default: {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    // 显示音乐列表弹出层\r\n    showPopup() {\r\n        this.setState(\r\n            {\r\n                popupShow: !this.state.popupShow\r\n            },\r\n            () => {\r\n                new BScroll(this.popupBox, {\r\n                    click: true,\r\n                    startY: -this.state.index * 40\r\n                });\r\n            }\r\n        );\r\n    }\r\n    // 点击进度条\r\n    progressClick(e) {\r\n        this.setProgress(e.clientX - this.progressBox.offsetLeft);\r\n        this.setMucTiem();\r\n    }\r\n    setProgress(x) {\r\n        this.progress.style.width = x + 'px';\r\n    }\r\n    setMucTiem() {\r\n        if (!this.state.isPlay) {\r\n            return\r\n        }\r\n        let percentage =\r\n            this.progress.offsetWidth / this.progressBox.offsetWidth;\r\n        if (percentage < 0.04) {\r\n            percentage = 0;\r\n        }\r\n        this.audio.currentTime = this.audio.duration * percentage;\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"playMusic\" style={{ bottom: this.state.show }}>\r\n                <div className=\"bg\">\r\n                    <div\r\n                        className=\"before\"\r\n                        style={{ backgroundImage: `url(${this.state.picUrl})` }}\r\n                    ></div>\r\n                </div>\r\n                <div className=\"tool\">\r\n                    <Item\r\n                        thumb={this.state.picUrl}\r\n                        onClick={() => this.showAll(this)}\r\n                        ref={val => (this.img = val)}\r\n                    >\r\n                        {this.state.musicName}{' '}\r\n                        <Brief>{this.state.musicAr}</Brief>\r\n                    </Item>\r\n                    <div className=\"btn\">\r\n                        <i\r\n                            onClick={() => this.Playing(this)}\r\n                            className={\r\n                                this.state.isPlay\r\n                                    ? 'iconfont icon-zanting'\r\n                                    : 'iconfont icon-bofang'\r\n                            }\r\n                        />\r\n                        <i\r\n                            className=\"iconfont icon-yinleliebiao\"\r\n                            onClick={() => this.showPopup()}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"all\">\r\n                    <Icon type=\"down\" onClick={() => this.unShowAll(this)} />\r\n                    <div className=\"title\">{this.state.musicName}</div>\r\n                    <div className=\"singer\">{this.state.musicAr}</div>\r\n                    <div\r\n                        className=\"lycBox\"\r\n                        onClick={() =>\r\n                            this.setState({ isShowLyc: !this.state.isShowLyc })\r\n                        }\r\n                    >\r\n                        <div\r\n                            className=\"plate\"\r\n                            style={{\r\n                                width: window.screen.width * 0.8,\r\n                                height: window.screen.width * 0.8,\r\n                                opacity: this.state.isShowLyc ? 0 : 1\r\n                            }}\r\n                            ref={val => (this.plate = val)}\r\n                        >\r\n                            <img src={this.state.picUrl} alt=\"\" />\r\n                        </div>\r\n                        <div\r\n                            className=\"lycBrief\"\r\n                            style={{ opacity: this.state.isShowLyc ? 0 : 1 }}\r\n                        >\r\n                            <p ref={val => (this.lycBrief = val)}></p>\r\n                        </div>\r\n                        <div\r\n                            className=\"allLyc\"\r\n                            style={{ opacity: this.state.isShowLyc ? 1 : 0 }}\r\n                            ref={val => (this.allLyc = val)}\r\n                        >\r\n                            {this.state.lycArr &&\r\n                                this.state.lycArr.map((item, index) => {\r\n                                    return (\r\n                                        <p\r\n                                            key={index}\r\n                                            className={\r\n                                                index ===\r\n                                                    this.state.currentLyric\r\n                                                    ? 'current'\r\n                                                    : ''\r\n                                            }\r\n                                        >\r\n                                            {item.str}\r\n                                        </p>\r\n                                    );\r\n                                })}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"allTool\">\r\n                        <div className=\"progressBar\">\r\n                            <span>{this.state.playLength.current}</span>\r\n                            <div\r\n                                className=\"progressBox\"\r\n                                onTouchStart={() =>\r\n                                    this.setState({ isTouchDown: true })\r\n                                }\r\n                                onTouchEnd={() => {\r\n                                    this.setState({ isTouchDown: false });\r\n                                    setTimeout(() => {\r\n                                        this.setMucTiem();\r\n                                    }, 0);\r\n                                }}\r\n                                onClick={e => this.progressClick(e)}\r\n                            >\r\n                                <div ref={val => (this.progressBox = val)}>\r\n                                    <div\r\n                                        className=\"progress\"\r\n                                        ref={val => (this.progress = val)}\r\n                                    ></div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"audio\">\r\n                                <audio\r\n                                    autoPlay\r\n                                    onTimeUpdate={() => this.timeupdate(this)}\r\n                                    controls\r\n                                    src={this.state.musicUrl}\r\n                                    onPlaying={() => {\r\n                                        this.setState({ isPlay: true });\r\n                                    }}\r\n                                    onPause={() => {\r\n                                        this.setState({ isPlay: false });\r\n                                    }}\r\n                                    id=\"audio\"\r\n                                    loop={\r\n                                        this.state.platPattern === 'singleCycle'\r\n                                    }\r\n                                    ref={val => (this.audio = val)}\r\n                                />\r\n                            </div>\r\n                            <span>{this.state.playLength.end}</span>\r\n                        </div>\r\n                        <div className=\"control\">\r\n                            {this.state.platPattern === 'listCycle' && (\r\n                                <i\r\n                                    className=\"iconfont icon-icon--\"\r\n                                    onClick={() => {\r\n                                        this.setState({\r\n                                            platPattern: 'singleCycle'\r\n                                        });\r\n                                        myToast('单曲循环', 2000)\r\n                                    }}\r\n                                />\r\n                            )}\r\n                            {this.state.platPattern === 'singleCycle' && (\r\n                                <i\r\n                                    className=\"iconfont icon-danquxunhuan\"\r\n                                    onClick={() => {\r\n                                        this.setState({\r\n                                            platPattern: 'random'\r\n                                        });\r\n                                        myToast('随机播放', 2000)\r\n                                    }}\r\n                                />\r\n                            )}\r\n                            {this.state.platPattern === 'random' && (\r\n                                <i\r\n                                    className=\"iconfont icon-suijibofang\"\r\n                                    onClick={() => {\r\n                                        this.setState({\r\n                                            platPattern: 'listCycle'\r\n                                        });\r\n                                        myToast('顺序播放', 2000)\r\n                                    }}\r\n                                />\r\n                            )}\r\n                            <i\r\n                                className=\"iconfont icon-shangyishoushangyige\"\r\n                                onClick={() => this.MusicChange(-1)}\r\n                            />\r\n                            <i\r\n                                onClick={() => this.Playing(this)}\r\n                                className={\r\n                                    this.state.isPlay\r\n                                        ? 'iconfont icon-zanting'\r\n                                        : 'iconfont icon-bofang'\r\n                                }\r\n                            />\r\n                            <i\r\n                                className=\"iconfont icon-xiayigexiayishou\"\r\n                                onClick={() => this.MusicChange(1)}\r\n                            />\r\n                            <i\r\n                                className=\"iconfont icon-yinleliebiao\"\r\n                                onClick={() => this.showPopup()}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Modal\r\n                    popup\r\n                    visible={this.state.popupShow}\r\n                    onClose={() => this.showPopup()}\r\n                    animationType=\"slide-up\"\r\n                >\r\n                    <div className=\"songListPopup\">\r\n                        <List\r\n                            renderHeader={() => (\r\n                                <div className=\"title\">\r\n                                    <div className=\"left\">\r\n                                        {this.state.platPattern ===\r\n                                            'listCycle' && (\r\n                                                <>\r\n                                                    <i\r\n                                                        className=\"iconfont icon-icon--\"\r\n                                                        onClick={() => {\r\n                                                            this.setState({\r\n                                                                platPattern:\r\n                                                                    'singleCycle'\r\n                                                            });\r\n                                                        }}\r\n                                                    />\r\n                                                    顺序播放\r\n                                            </>\r\n                                            )}\r\n                                        {this.state.platPattern ===\r\n                                            'singleCycle' && (\r\n                                                <>\r\n                                                    <i\r\n                                                        className=\"iconfont icon-danquxunhuan\"\r\n                                                        onClick={() => {\r\n                                                            this.setState({\r\n                                                                platPattern:\r\n                                                                    'random'\r\n                                                            });\r\n                                                        }}\r\n                                                    />\r\n                                                    单曲循环\r\n                                            </>\r\n                                            )}\r\n                                        {this.state.platPattern ===\r\n                                            'random' && (\r\n                                                <>\r\n                                                    <i\r\n                                                        className=\"iconfont icon-suijibofang\"\r\n                                                        onClick={() => {\r\n                                                            this.setState({\r\n                                                                platPattern:\r\n                                                                    'listCycle'\r\n                                                            });\r\n                                                        }}\r\n                                                    />\r\n                                                    随机播放\r\n                                            </>\r\n                                            )}\r\n                                    </div>\r\n                                    <i\r\n                                        className=\"iconfont icon-guanbi\"\r\n                                        onClick={() => this.showPopup()}\r\n                                    />\r\n                                </div>\r\n                            )}\r\n                            className=\"popup-list\"\r\n                        >\r\n                            <div\r\n                                className=\"box\"\r\n                                ref={val => (this.popupBox = val)}\r\n                            >\r\n                                <div>\r\n                                    {this.state.musicList.map((item, index) => (\r\n                                        <Item\r\n                                            key={index}\r\n                                            onClick={() => this.setState({ index }, () => {\r\n                                                this.setMusicUrl();\r\n                                            })}\r\n                                        >\r\n                                            <span style={{ color: this.state.index === index ? \"#d4473e\" : \"#a09191\" }}>\r\n                                                <i\r\n                                                    className=\"iconfont icon-bofang\"\r\n                                                    style={{\r\n                                                        opacity:\r\n                                                            this.state.index ===\r\n                                                                index\r\n                                                                ? 1\r\n                                                                : 0\r\n                                                    }}\r\n                                                />\r\n                                                {item.name} - {item.arName}\r\n                                            </span>\r\n                                            <div className=\"ico\">\r\n                                                <i className=\"iconfont icon-shoucang\" />\r\n                                                <i className=\"iconfont icon-RectangleCopy\" />\r\n                                            </div>\r\n                                        </Item>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        </List>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","function playAnimation(e) {\r\n    let root = document.getElementById('root');\r\n    let ico = document.createElement('i');\r\n    ico.className = 'iconfont icon-yinle animation';\r\n    ico.style.top = e.pageY - 5 + 'px';\r\n    ico.style.left = e.pageX - 5 + 'px';\r\n    root.append(ico);\r\n    setTimeout(() => {\r\n        ico.style.top = window.screen.height - 45 + 'px';\r\n        ico.style.left = '8%';\r\n        ico.style.fontSize = '30px'\r\n    }, 0);\r\n    setTimeout(() => {\r\n        ico.style.opacity = 0;\r\n    },1000)\r\n    setTimeout(() => {\r\n        root.removeChild(ico);\r\n    }, 2000);\r\n}\r\n\r\nexport { playAnimation };\r\n","import React from 'react';\r\nimport './index.scss';\r\nimport { searchMusic, getSearchHot } from '../../api/search';\r\nimport { getSingerDesc } from '../../api/singer';\r\nimport { getPlaylist } from '../../api/song_menu';\r\nimport { List, Tag } from 'antd-mobile';\r\nimport BScroll from '@better-scroll/core';\r\nimport store from '../../redux';\r\nimport { setMucData } from '../../redux/actionCreator';\r\nconst Item = List.Item;\r\nconst Brief = Item.Brief;\r\nlet tiemId = null;\r\n\r\nexport default class search extends React.Component {\r\n    state = {\r\n        boxStyle: {},\r\n        key: '',\r\n        searchList: [],\r\n        singerData: {},\r\n        playlists: [],\r\n        searchHot: []\r\n    };\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n            this.setState({\r\n                boxStyle: {\r\n                    transform: 'translateX(0)'\r\n                }\r\n            });\r\n        }, 0);\r\n        let input = document.getElementById('input');\r\n        input.focus();\r\n        new BScroll(this.search, {\r\n            click: true\r\n        });\r\n        setTimeout(() => {\r\n            this.search.style.backgroundColor = '#f3f3f4';\r\n        }, 300);\r\n        this.getSearchHot();\r\n    }\r\n    // 获取搜索热词\r\n    async getSearchHot() {\r\n        try {\r\n            let res = await getSearchHot();\r\n            this.setState({ searchHot: res.result.hots });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    // 当搜索框值改变时\r\n    onChange() {\r\n        if (tiemId) {\r\n            clearInterval(tiemId);\r\n        }\r\n        tiemId = setTimeout(() => {\r\n            clearInterval(tiemId);\r\n            if (this.input.value.trim().length > 0) {\r\n                this.setState({ key: this.input.value }, () => {\r\n                    this.searchMusic(this.state.key);\r\n                });\r\n            } else {\r\n                this.setState({ searchList: [] });\r\n            }\r\n            this.box.style.transform = 'translateY(0)';\r\n        }, 500);\r\n    }\r\n    // 获取搜索内容\r\n    async searchMusic(key) {\r\n        try {\r\n            let res = await searchMusic(key);\r\n            this.getPlaylist(res.result.songs[0].id);\r\n            this.getSingerDesc(res.result.songs[0].artists[0].id);\r\n            this.setState({ searchList: res.result.songs });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    // 获取歌手详情\r\n    async getSingerDesc(id) {\r\n        try {\r\n            let res = await getSingerDesc(id);\r\n            this.setState({ singerData: res.artist });\r\n            return res.artist;\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    // 获取相似歌单\r\n    async getPlaylist(id) {\r\n        try {\r\n            let res = await getPlaylist(id);\r\n            this.setState({ playlists: res.playlists });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    // 播放歌曲\r\n    play(list, index,e) {\r\n        try {\r\n            let arr = [];\r\n            list.forEach((item, _index) => {\r\n                arr.push({\r\n                    id: item.id,\r\n                    name: item.name,\r\n                    arName: item.artists[0].name,\r\n                    artId:\r\n                        item.artists[\r\n                            Math.floor(Math.random() * item.artists.length)\r\n                        ].id\r\n                });\r\n            });\r\n            store.musicUrl.dispatch(setMucData({ list: arr, index, even: e }));\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"search\" ref={val => (this.search = val)}>\r\n                <div\r\n                    className=\"box\"\r\n                    ref={val => (this.box = val)}\r\n                    style={this.state.boxStyle}\r\n                >\r\n                    {this.state.searchList.length > 0 && (\r\n                        <div className=\"content\">\r\n                            <div className=\"singer\">\r\n                                <div className=\"title\">相关歌手</div>\r\n                                <Item\r\n                                    thumb={this.state.singerData.picUrl}\r\n                                    onClick={() => {\r\n                                        this.props.history.push(\r\n                                            `/singerDetails/${this.state.singerData.id}`\r\n                                        );\r\n                                    }}\r\n                                >\r\n                                    {this.state.singerData.name}\r\n                                </Item>\r\n                            </div>\r\n                            <div className=\"songMenuList\">\r\n                                <div className=\"title\">相关歌单</div>\r\n                                <List>\r\n                                    {this.state.playlists.map((item, index) => {\r\n                                        return (\r\n                                            <Item\r\n                                                key={index}\r\n                                                thumb={item.coverImgUrl}\r\n                                                onClick={() => {\r\n                                                    this.props.history.push(\r\n                                                        '/songMenu/' + item.id\r\n                                                    );\r\n                                                }}\r\n                                            >\r\n                                                {item.name}\r\n                                            </Item>\r\n                                        );\r\n                                    })}\r\n                                </List>\r\n                            </div>\r\n                            <div className=\"songList\">\r\n                                <List>\r\n                                    {this.state.searchList.map(\r\n                                        (item, index) => {\r\n                                            return (\r\n                                                <Item\r\n                                                    onClick={(e) =>\r\n                                                        this.play(\r\n                                                            this.state\r\n                                                                .searchList,\r\n                                                            index,\r\n                                                            e\r\n                                                        )\r\n                                                    }\r\n                                                    key={index}\r\n                                                >\r\n                                                    {item.name}\r\n                                                    <Brief>\r\n                                                        {item.artists[0].name} -{' '}\r\n                                                        {item.album.name}\r\n                                                    </Brief>\r\n                                                </Item>\r\n                                            );\r\n                                        }\r\n                                    )}\r\n                                </List>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {this.state.searchList.length === 0 && (\r\n                        <div className=\"hotKey\">\r\n                            <div className=\"title\">热门搜索</div>\r\n                            <div className=\"content\">\r\n                                {this.state.searchHot.map((item, index) => {\r\n                                    return (\r\n                                        <Tag data-seed=\"logId\" key={index}>\r\n                                            <div\r\n                                                onClick={() => {\r\n                                                    this.searchMusic(\r\n                                                        item.first\r\n                                                    );\r\n                                                    this.input.value =\r\n                                                        item.first;\r\n                                                    this.setState({\r\n                                                        key: item.first\r\n                                                    });\r\n                                                }}\r\n                                            >\r\n                                                {item.first}\r\n                                            </div>\r\n                                        </Tag>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                {/* 搜索条 */}\r\n                <div className=\"searchBar\" style={this.state.boxStyle}>\r\n                    <i\r\n                        className=\"iconfont icon-xiangzuojiantou\"\r\n                        onClick={() => {\r\n                            this.search.style.backgroundColor = '';\r\n                            this.setState({\r\n                                boxStyle: { transform: 'translateX(100%)' }\r\n                            });\r\n                            setTimeout(() => {\r\n                                this.props.history.go(-1);\r\n                            }, 300);\r\n                        }}\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"input\"\r\n                        placeholder=\"搜索歌曲、歌手、专辑\"\r\n                        ref={val => (this.input = val)}\r\n                        onChange={() => this.onChange()}\r\n                    />\r\n                    {this.state.key.trim().length > 0 && (\r\n                        <i\r\n                            className=\"iconfont icon-guanbi\"\r\n                            onClick={() => {\r\n                                this.input.value = '';\r\n                                this.setState({ key: '' });\r\n                                this.setState({ searchList: [] });\r\n                            }}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import request from '../utils/request';\r\n\r\nfunction searchMusic(keywords) {\r\n    return request({\r\n        method: 'get',\r\n        url: '/search',\r\n        params:{\r\n            keywords\r\n        }\r\n    });\r\n}\r\n\r\n\r\nfunction getSearchHot() {\r\n    return request({\r\n        method: 'get',\r\n        url: '/search/hot'\r\n    });\r\n}\r\n\r\nexport {\r\n    getSearchHot,\r\n    searchMusic\r\n}","import React from 'react';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Home from './view/home';\r\nimport SongMenu from './view/songMenu';\r\nimport SingerDetails from './view/singerDetails';\r\nimport PlayMusic from './view/playMusic';\r\nimport Search from './view/search';\r\nimport './APP.scss';\r\n\r\nexport default class App extends React.Component {\r\n    state = {\r\n        isPC: null\r\n    };\r\n    componentDidMount() {\r\n        if (!/Android|webOS|iPhone|iPod|BlackBerry/i.test(navigator.userAgent)) {\r\n            this.setState({ isPC: 'pc' })\r\n        }\r\n        window.addEventListener('resize', () => {\r\n            setTimeout(() => {\r\n                if (/Android|webOS|iPhone|iPod|BlackBerry/i.test(navigator.userAgent)) {\r\n                    if (this.state.isPC === 'pc') {\r\n                        window.location.reload()\r\n                    }\r\n                }\r\n            }, 1000)\r\n        })\r\n    };\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"box\">\r\n                    <Router>\r\n                        <Route path=\"/\" component={Home} />\r\n                        <Switch>\r\n                            <Route path=\"/songMenu/:id\" component={SongMenu} />\r\n                            <Route path=\"/singerDetails/:id\" component={SingerDetails} />\r\n                            <Route path=\"/search\" component={Search} />\r\n                        </Switch>\r\n                    </Router>\r\n                    <PlayMusic />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n// antd-mobile UI\r\nimport 'antd-mobile/dist/antd-mobile.css';\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
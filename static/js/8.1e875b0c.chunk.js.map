{"version":3,"sources":["view/singerDetails/index.jsx"],"names":["Item","Brief","singerDetails","state","songList","artist","picUrl","name","hotSongs","show","this","getSongList","setTimeout","setState","transform","id","props","match","params","res","console","log","list","index","e","arr","forEach","item","push","artId","ar","Math","floor","random","length","arName","store","musicUrl","dispatch","setMucData","even","className","style","backgroundImage","inline","type","onClick","play","map","key","multipleLine","history","go","React","Component"],"mappings":"kYAMMA,EAAO,IAAKA,KACZC,EAAQD,EAAKC,MAEEC,E,2MACnBC,MAAQ,CACNC,SAAU,CACRC,OAAQ,CACNC,OAAQ,uEACRC,KAAM,gBAERC,SAAU,IAEZC,KAAM,I,mFAEa,IAAD,OAClBC,KAAKC,cACLC,YAAW,WACT,EAAKC,SAAS,CAAEJ,KAAM,CAAEK,UAAW,oBAClC,K,6KAMeH,YAAY,CAC1BI,GAAIL,KAAKM,MAAMC,MAAMC,OAAOH,K,OAD1BI,E,OAGJT,KAAKG,SAAS,CAAET,SAAUe,I,gDAE1BC,QAAQC,IAAR,M,0IAICC,EAAMC,EAAOC,GAChB,IAAIC,EAAM,GACVH,EAAKI,SAAQ,SAAAC,GACXF,EAAIG,KAAK,CACPb,GAAIY,EAAKZ,GACTR,KAAMoB,EAAKpB,KACXsB,MAAOF,EAAKG,GAAGC,KAAKC,MAAMD,KAAKE,SAAWN,EAAKG,GAAGI,SAASnB,GAC3DoB,OAAQR,EAAKG,GAAG,GAAGvB,UAGvB6B,IAAMC,SAASC,SAASC,YAAW,CAAEjB,KAAMG,EAAKF,QAAOiB,KAAMhB,O,+BAErD,IAAD,OACP,OACE,yBAAKT,GAAG,gBAAgB0B,UAAU,gBAAgBC,MAAOhC,KAAKP,MAAMM,MAClE,yBACEgC,UAAU,QACVC,MAAO,CACLC,gBAAgB,OAAD,OAASjC,KAAKP,MAAMC,SAASC,OAAOC,OAApC,OAGjB,uBAAQmC,UAAU,MAAMG,QAAM,EAACC,KAAK,WAClC,uBAAGJ,UAAU,qBAAb,mBAGJ,yBAAK1B,GAAG,eAAe0B,UAAU,gBAC/B,2BACE,yBAAKA,UAAU,SACb,6BACE,uBAAGA,UAAU,uBAAuBK,QAAS,SAAAtB,GAAC,OAAI,EAAKuB,KAAK,EAAK5C,MAAMC,SAASI,SAAU,EAAGgB,MAC7F,yDAEE,8BAAOd,KAAKP,MAAMC,SAASI,UAApB,iBAAqCE,KAAKP,MAAMC,SAASI,SAAS0B,OAAlE,eAIZxB,KAAKP,MAAMC,SAASI,SAASwC,KAAI,SAACrB,EAAMJ,GACvC,OACE,yBAAKkB,UAAU,MAAMQ,IAAK1B,GACxB,0BAAMkB,UAAU,SAASlB,EAAQ,GACjC,kBAACvB,EAAD,CAAMkD,cAAY,EAACJ,QAAS,SAAAtB,GAAC,OAAI,EAAKuB,KAAK,EAAK5C,MAAMC,SAASI,SAAUe,EAAOC,KAC9E,2BAAIG,EAAKpB,MACT,kBAACN,EAAD,KACG0B,EAAKG,GAAG,GAAGvB,KADd,MACuBoB,EAAKpB,YAQG,IAAxCG,KAAKP,MAAMC,SAASI,SAAS0B,QAAgB,uBAAMW,KAAK,aAG3D,yBAAKJ,UAAU,OACb,uBACEI,KAAK,OACLC,QAAS,WACP,EAAKjC,SAAS,CACZJ,KAAM,CAAEK,UAAW,oBAErBF,YAAW,WACT,EAAKI,MAAMmC,QAAQC,IAAI,KACtB,QAGN1C,KAAKP,MAAMC,SAASC,OAAOE,W,GAhGK8C,IAAMC","file":"static/js/8.1e875b0c.chunk.js","sourcesContent":["import React from 'react'\r\nimport './index.scss'\r\nimport { Icon, Button, List } from 'antd-mobile'\r\nimport { getSongList } from '../../api/singer'\r\nimport store from '../../redux'\r\nimport { setMucData } from '../../redux/actionCreator'\r\nconst Item = List.Item\r\nconst Brief = Item.Brief\r\n\r\nexport default class singerDetails extends React.Component {\r\n  state = {\r\n    songList: {\r\n      artist: {\r\n        picUrl: 'http://img3.imgtn.bdimg.com/it/u=1105085267,629346802&fm=26&gp=0.jpg',\r\n        name: '歌单'\r\n      },\r\n      hotSongs: []\r\n    },\r\n    show: {}\r\n  }\r\n  componentDidMount() {\r\n    this.getSongList()\r\n    setTimeout(() => {\r\n      this.setState({ show: { transform: 'rotate(0deg)' } })\r\n    }, 0)\r\n  }\r\n\r\n  // 获取歌曲数据列表\r\n  async getSongList() {\r\n    try {\r\n      let res = await getSongList({\r\n        id: this.props.match.params.id\r\n      })\r\n      this.setState({ songList: res })\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n  // 播放音乐\r\n  play(list, index, e) {\r\n    let arr = []\r\n    list.forEach(item => {\r\n      arr.push({\r\n        id: item.id,\r\n        name: item.name,\r\n        artId: item.ar[Math.floor(Math.random() * item.ar.length)].id,\r\n        arName: item.ar[0].name\r\n      })\r\n    })\r\n    store.musicUrl.dispatch(setMucData({ list: arr, index, even: e }))\r\n  }\r\n  render() {\r\n    return (\r\n      <div id='singerDetails' className='singerDetails' style={this.state.show}>\r\n        <div\r\n          className='cover'\r\n          style={{\r\n            backgroundImage: `url(${this.state.songList.artist.picUrl})`\r\n          }}\r\n        >\r\n          <Button className='btn' inline type='warning'>\r\n            <i className='iconfont icon-add'> 收藏</i>\r\n          </Button>\r\n        </div>\r\n        <div id='songMenuList' className='songMenuList'>\r\n          <List>\r\n            <div className='title'>\r\n              <div>\r\n                <i className='iconfont icon-bofang' onClick={e => this.play(this.state.songList.hotSongs, 0, e)}></i>\r\n                <span>\r\n                  播放全部\r\n                  <span>{this.state.songList.hotSongs && `(共${this.state.songList.hotSongs.length}首)`}</span>\r\n                </span>\r\n              </div>\r\n            </div>\r\n            {this.state.songList.hotSongs.map((item, index) => {\r\n              return (\r\n                <div className='box' key={index}>\r\n                  <span className='index'>{index + 1}</span>\r\n                  <Item multipleLine onClick={e => this.play(this.state.songList.hotSongs, index, e)}>\r\n                    <p>{item.name}</p>\r\n                    <Brief>\r\n                      {item.ar[0].name} - {item.name}\r\n                    </Brief>\r\n                  </Item>\r\n                </div>\r\n              )\r\n            })}\r\n          </List>\r\n\r\n          {this.state.songList.hotSongs.length === 0 && <Icon type='loading' />}\r\n        </div>\r\n\r\n        <div className='top'>\r\n          <Icon\r\n            type='left'\r\n            onClick={() => {\r\n              this.setState({\r\n                show: { transform: 'rotate(-90deg)' }\r\n              })\r\n              setTimeout(() => {\r\n                this.props.history.go(-1)\r\n              }, 400)\r\n            }}\r\n          />\r\n          {this.state.songList.artist.name}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"],"sourceRoot":""}
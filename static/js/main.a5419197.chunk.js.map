{"version":3,"sources":["view/home/components/topBar/index.jsx","utils/request.js","api/song_menu.js","view/home/components/recommend/songList/index.jsx","view/home/components/recommend/index.jsx","api/banner.js","api/singer.js","view/home/components/singer/index.jsx","view/home/components/ranking/index.jsx","api/ranking.js","view/home/index.jsx","redux/actionType.js","redux/index.js","redux/reducers.js","redux/actionCreator.js","view/songMenu/index.jsx","view/singerDetails/index.jsx","api/music.js","utils/myToast.js","view/playMusic/index.jsx","utils/playAnimation.js","view/search/index.jsx","api/search.js","App.js","serviceWorker.js","index.js"],"names":["topBar","state","className","mode","icon","type","onLeftClick","rightContent","key","style","marginRight","onClick","props","history","push","React","Component","withRouter","request","axios","create","baseURL","defaults","transformResponse","data","interceptors","use","config","err","Promise","reject","response","JSON","parse","getDetails","id","method","url","params","getPlaylist","songList","setTimeout","getSongList","item","this","res","setState","result","recommend","document","getElementById","BScroll","click","bounce","top","console","log","map","index","songMenu","src","picUrl","alt","name","Math","ceil","playCount","bannerList","getBanners","banners","autoplay","infinite","beforeChange","from","to","afterChange","display","width","height","imageUrl","verticalAlign","onLoad","window","dispatchEvent","Event","imgHeight","singerType","cat","initial","getSingerDesc","Item","singer","letterIndex","letter","singerList","_index","loadList","undefined","classify","scrollX","scrollY","a","artists","screen","letterScreen","thumb","Brief","ranking","authorityList","globalList","getRanking","list","slice","forEach","getSongMenu","length","arr","tags","playlist","tracks","coverImgUrl","hasLine","columnNum","renderItem","borderRadius","color","fontSize","marginTop","updateFrequency","tabs","title","sub","home","initialPage","tabBarBackgroundColor","tabBarInactiveTextColor","tabBarActiveTextColor","swipeable","alignItems","justifyContent","backgroundColor","SET_MUC_DATA","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","musicUrl","createStore","action","applyMiddleware","thunk","setMucData","subscribedCount","bgStyle","backgroundImage","show","transform","documentElement","scrollTop","match","songMenuList","e","artId","ar","floor","random","arName","dispatch","even","ref","val","go","leftContent","play","multipleLine","singerDetails","artist","hotSongs","inline","getMusicLyc","myToast","msg","tiem","popup","createElement","innerText","body","append","position","opacity","left","textAlign","zIndex","transition","padding","removeChild","playMusic","isPlay","musicList","musicName","musicAr","playLength","current","end","platPattern","lycArr","currentLyric","isShowLyc","popupShow","isTouchDown","addEventListener","event","x","changedTouches","clientX","progressBox","offsetLeft","setProgress","subscribe","getState","root","ico","pageY","pageX","playAnimation","setMusicUrl","lyric","split","lyricArr","i","timeStr","substring","str","replace","timeArr","j","time","Number","sort","b","progress","MusicChange","lyc","lyricDispose","lrc","_this","audio","pause","getElementsByClassName","tool","ended","currentTime","duration","m","toString","s","padStart","percentage","offsetWidth","lycBrief","allLyc","popupBox","startY","setMucTiem","bottom","showAll","img","Playing","showPopup","unShowAll","plate","onTouchStart","onTouchEnd","progressClick","autoPlay","onTimeUpdate","timeupdate","controls","onPlaying","onPause","loop","visible","onClose","animationType","renderHeader","tiemId","search","boxStyle","searchList","singerData","playlists","searchHot","focus","getSearchHot","hots","clearInterval","input","value","trim","searchMusic","box","keywords","songs","album","data-seed","first","placeholder","onChange","App","isPC","test","navigator","userAgent","location","reload","path","component","Home","SongMenu","SingerDetails","Search","Boolean","hostname","ReactDOM","render","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a5419197.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavBar, Icon } from 'antd-mobile';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport './index.scss'\r\n\r\nclass topBar extends React.Component {\r\n    state = {};\r\n    render() {\r\n        return (\r\n            <div className=\"topBar\">\r\n                <NavBar\r\n                    mode=\"light\"\r\n                    icon={<Icon type=\"ellipsis\" />}\r\n                    onLeftClick={() => {}}\r\n                    rightContent={[\r\n                        <Icon\r\n                            key=\"0\"\r\n                            type=\"search\"\r\n                            style={{ marginRight: '16px' }}\r\n                            onClick={() => {\r\n                                this.props.history.push('/search');\r\n                            }}\r\n                        />\r\n                    ]}\r\n                >\r\n                    云音乐\r\n                </NavBar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(topBar)\r\n","import axios from 'axios';\r\n\r\n\r\nvar request = axios.create({\r\n    baseURL: 'https://autumnfish.cn'\r\n});\r\n//配置axios全局配置\r\nrequest.defaults.transformResponse = [\r\n    data => {\r\n        // 在传递给 then/catch 前，把返回的大数字做安全处理\r\n        return data;\r\n    }\r\n];\r\n\r\n// 添加请求拦截器\r\nrequest.interceptors.request.use(\r\n    config => {\r\n        return config;\r\n    },\r\n    err => {\r\n        return Promise.reject(err);\r\n    }\r\n);\r\n\r\n// 添加响应拦截器\r\nrequest.interceptors.response.use(\r\n    response => {\r\n        return JSON.parse(response.data);\r\n    },\r\n    err => {\r\n        return Promise.reject(err);\r\n    }\r\n);\r\n\r\nexport default request\r\n","import request from '../utils/request';\r\n\r\nfunction getHotSongMenu() {\r\n    return request({\r\n        method: 'get',\r\n        url: '/personalized'\r\n    });\r\n}\r\n\r\nfunction getDetails(id) {\r\n    return request({\r\n        method: 'get',\r\n        url: '/playlist/detail',\r\n        params:{id}\r\n    });\r\n}\r\n\r\nfunction getPlaylist(id) {\r\n    return request({\r\n        method: 'get',\r\n        url: '/simi/playlist',\r\n        params:{id}\r\n    });\r\n}\r\n\r\n\r\nexport {\r\n    getHotSongMenu,\r\n    getDetails,\r\n    getPlaylist\r\n}","import React from 'react'\r\nimport './index.css'\r\nimport { getHotSongMenu } from '../../../../../api/song_menu'\r\nimport BScroll from '@better-scroll/core'\r\nimport { List } from 'antd-mobile'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nclass songList extends React.Component {\r\n  state = {\r\n    songList: []\r\n  }\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      this.getSongList()\r\n    },1000)\r\n  }\r\n  songMenu(item) {\r\n    this.props.history.push('/songMenu/' + item.id)\r\n  }\r\n  async getSongList() {\r\n    try {\r\n      let res = await getHotSongMenu()\r\n      this.setState(\r\n        {\r\n          songList: res.result\r\n        },\r\n        () => {\r\n            let recommend = document.getElementById('recommend')\r\n            new BScroll(recommend, {\r\n              click: true,\r\n              bounce: {\r\n                top: false\r\n              }\r\n            })\r\n        }\r\n      )\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className='songList'>\r\n        <div className='title'>推荐歌单</div>\r\n        <List>\r\n          <ul>\r\n            {this.state.songList.map((item, index) => {\r\n              return (\r\n                  <li key={index} onClick={() => this.songMenu(item)}>\r\n                    <div className='imgBox'>\r\n                      <img src={item.picUrl} alt='' />\r\n                    </div>\r\n                    <div>{item.name}</div>\r\n                    <i className='iconfont icon-kefu'> {Math.ceil(item.playCount / 10000)}万</i>\r\n                  </li>\r\n              )\r\n            })}\r\n          </ul>\r\n        </List>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(songList)\r\n","import React from 'react';\r\nimport './index.css';\r\nimport { Carousel, WingBlank } from 'antd-mobile';\r\nimport SongList from './songList';\r\nimport { getBanner } from '../../../../api/banner';\r\n\r\nexport default class recommend extends React.Component {\r\n    state = {\r\n        bannerList: []\r\n    };\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n            this.getBanners();\r\n        },1000)\r\n    }\r\n    async getBanners() {\r\n        try {\r\n            let res = await getBanner({\r\n                type: 1\r\n            });\r\n            this.setState({\r\n                bannerList: res.banners\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"recommend\" id=\"recommend\">\r\n                <div>\r\n                    <div className=\"bg\"></div>\r\n                    <div className=\"carousel\">\r\n                        <WingBlank>\r\n                            <Carousel\r\n                                autoplay={true}\r\n                                infinite\r\n                                beforeChange={(from, to) => {}}\r\n                                afterChange={index => {}}\r\n                            >\r\n                                {this.state.bannerList.map((item, index) => (\r\n                                    <div\r\n                                        key={index}\r\n                                        style={{\r\n                                            display: 'inline-block',\r\n                                            width: '100%',\r\n                                            height: 150\r\n                                        }}\r\n                                    >\r\n                                        <img\r\n                                            src={item.imageUrl}\r\n                                            alt=\"\"\r\n                                            style={{\r\n                                                width: '100%',\r\n                                                height: '150px',\r\n                                                verticalAlign: 'top'\r\n                                            }}\r\n                                            onLoad={() => {\r\n                                                // fire window resize event to change height\r\n                                                window.dispatchEvent(\r\n                                                    new Event('resize')\r\n                                                );\r\n                                                this.setState({\r\n                                                    imgHeight: 'auto'\r\n                                                });\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                ))}\r\n                            </Carousel>\r\n                        </WingBlank>\r\n                    </div>\r\n                    <div className=\"song-list\">\r\n                        <SongList />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import request from '../utils/request';\r\n\r\nfunction getBanner(type) {\r\n    return request({\r\n        method: 'get',\r\n        url: '/banner',\r\n        params:{\r\n            type\r\n        }\r\n    });\r\n}\r\n\r\nexport {\r\n    getBanner\r\n}","import request from '../utils/request';\r\n\r\nfunction singerType({cat,initial}) {\r\n    return request({\r\n        method: 'get',\r\n        url: '/artist/list',\r\n        params:{\r\n            cat,\r\n            initial\r\n        }\r\n    });\r\n}\r\n\r\nfunction getSongList({id}) {\r\n    return request({\r\n        method: 'get',\r\n        url: '/artists',\r\n        params:{\r\n            id\r\n        }\r\n    });\r\n}\r\nfunction getSingerDesc(id) {\r\n    return request({\r\n        method: 'get',\r\n        url: '/artist/album',\r\n        params:{\r\n            id\r\n        }\r\n    });\r\n}\r\n\r\nexport {\r\n    singerType,\r\n    getSongList,\r\n    getSingerDesc\r\n}","import React from 'react';\r\nimport BScroll from '@better-scroll/core';\r\nimport './index.css';\r\nimport { List } from 'antd-mobile';\r\nimport { singerType } from '../../../../api/singer';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst Item = List.Item;\r\n\r\nclass singer extends React.Component {\r\n    state = {\r\n        index: null,\r\n        letterIndex: null,\r\n        data: [\r\n            { name: '入驻歌手', index: 5001 },\r\n            { name: '华语男歌手', index: 1001 },\r\n            { name: '华语女歌手', index: 1002 },\r\n            { name: '华语组合', index: 1003 },\r\n            { name: '欧美男歌手', index: 2001 },\r\n            { name: '欧美女歌手', index: 2002 },\r\n            { name: '欧美组合', index: 2003 },\r\n            { name: '日本男歌手', index: 6001 },\r\n            { name: '日本女歌手', index: 6002 },\r\n            { name: '日本组合', index: 6003 },\r\n            { name: '韩国男歌手', index: 7001 },\r\n            { name: '韩国女歌手', index: 7002 },\r\n            { name: '韩国组合', index: 7003 },\r\n            { name: '其他男歌手', index: 4001 },\r\n            { name: '其他女歌手', index: 4002 },\r\n            { name: '其他组合', index: 4003 }\r\n        ],\r\n\r\n        letter: [\r\n            'A',\r\n            'B',\r\n            'C',\r\n            'D',\r\n            'E',\r\n            'F',\r\n            'G',\r\n            'H',\r\n            'I',\r\n            'J',\r\n            'K',\r\n            'L',\r\n            'M',\r\n            'N',\r\n            'O',\r\n            'P',\r\n            'Q'\r\n        ],\r\n        singerList: []\r\n    };\r\n    screen(_index) {\r\n        this.setState({ index: _index });\r\n        this.loadList({\r\n            cat: this.state.data[_index].index,\r\n            initial:\r\n                this.state.letterIndex !== null\r\n                    ? this.state.letter[this.state.letterIndex]\r\n                    : undefined\r\n        });\r\n        this.setState({ singerList: [] });\r\n    }\r\n    letterScreen(_index) {\r\n        this.setState({ letterIndex: _index });\r\n        this.loadList({\r\n            cat:\r\n                this.state.index !== null\r\n                    ? this.state.data[this.state.index].index\r\n                    : undefined,\r\n            initial: this.state.letter[_index]\r\n        });\r\n        this.setState({ singerList: [] });\r\n    }\r\n    async componentDidMount() {\r\n        let classify = document.getElementById('classify');\r\n        new BScroll(classify, { click: true, scrollX: true, scrollY: false });\r\n        let letter = document.getElementById('letter');\r\n        new BScroll(letter, { click: true, scrollX: true, scrollY: false });\r\n        this.loadList({ cat: 1001 });\r\n    }\r\n\r\n     loadList({ cat, initial }) {\r\n        setTimeout(async() => {\r\n            try {\r\n                let res = await singerType({ cat, initial });\r\n                this.setState({ singerList: res.artists });\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        },1000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"singer\">\r\n                <div id=\"classify\" className=\"classify\">\r\n                    <ul>\r\n                        <li className=\"title\">分类(默认热门):</li>\r\n                        {this.state.data.map((item, index) => {\r\n                            return (\r\n                                <li\r\n                                    onClick={() => this.screen(index)}\r\n                                    key={index}\r\n                                    className={\r\n                                        index === this.state.index\r\n                                            ? 'activate'\r\n                                            : ''\r\n                                    }\r\n                                >\r\n                                    {item.name}\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"letter\" id=\"letter\">\r\n                    <ul>\r\n                        <li className=\"title\">首字母:</li>\r\n                        {this.state.letter.map((item, index) => {\r\n                            return (\r\n                                <li\r\n                                    onClick={() => this.letterScreen(index)}\r\n                                    key={index}\r\n                                    className={\r\n                                        index === this.state.letterIndex\r\n                                            ? 'letter-activate'\r\n                                            : ''\r\n                                    }\r\n                                >\r\n                                    {item}\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"list\">\r\n                    <List>\r\n                        {this.state.singerList.map((item, index) => {\r\n                            return (\r\n                                <div className=\"item\" key={index}>\r\n                                    <Item\r\n                                        thumb={item.picUrl}\r\n                                        onClick={() => {\r\n                                            this.props.history.push(\r\n                                                `/singerDetails/${item.id}`\r\n                                            );\r\n                                        }}\r\n                                    >\r\n                                        {item.name}\r\n                                    </Item>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </List>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(singer)\r\n","import React from 'react'\r\nimport './index.scss'\r\nimport { List, Grid } from 'antd-mobile'\r\nimport { getRanking } from '../../../../api/ranking'\r\nimport { getDetails } from '../../../../api/song_menu'\r\nimport { withRouter } from 'react-router-dom'\r\nconst Item = List.Item\r\nconst Brief = Item.Brief\r\n\r\nclass ranking extends React.Component {\r\n  state = {\r\n    data: [1, 2, 3, 4, 5],\r\n    authorityList: [],\r\n    globalList: []\r\n  }\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      this.getRanking()\r\n    }, 3000)\r\n  }\r\n  async getRanking() {\r\n    try {\r\n      let res = await getRanking()\r\n      this.setState({ authorityList: res.list.slice(0, 4) }, () => {\r\n        this.state.authorityList.forEach((item, index) => {\r\n          this.getSongMenu(item.id, index)\r\n        })\r\n      })\r\n      this.setState({ globalList: res.list.slice(4, res.list.length) })\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n  async getSongMenu(id, index) {\r\n    try {\r\n      let res = await getDetails(id)\r\n      let arr = this.state.authorityList\r\n      arr[index].tags = res.playlist.tracks.slice(0, 3)\r\n      this.setState({ authorityList: arr })\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  songMenu(item) {\r\n    this.props.history.push('/songMenu/' + item.id)\r\n  }\r\n  render() {\r\n    return (\r\n      <div className='ranking'>\r\n        <div className='box'>\r\n          <div className='authority'>\r\n            <div className='title'>官方榜</div>\r\n            <List>\r\n              {this.state.authorityList.map((item, index) => {\r\n                return (\r\n                  <Item\r\n                    key={index}\r\n                    thumb={item.coverImgUrl}\r\n                    onClick={() => {\r\n                      this.songMenu(item)\r\n                    }}\r\n                  >\r\n                    {this.state.authorityList[index].tags.map((item, index) => {\r\n                      return (\r\n                        <Brief key={index}>\r\n                          {index + 1}. {item.name}\r\n                        </Brief>\r\n                      )\r\n                    })}\r\n                  </Item>\r\n                )\r\n              })}\r\n            </List>\r\n          </div>\r\n          <div className='global'>\r\n            <div className='title'>全球榜</div>\r\n            <Grid\r\n              hasLine={false}\r\n              data={this.state.globalList}\r\n              columnNum={3}\r\n              renderItem={item => (\r\n                <div\r\n                  onClick={() => {\r\n                    this.songMenu(item)\r\n                  }}\r\n                >\r\n                  <img\r\n                    src={item.coverImgUrl}\r\n                    style={{\r\n                      width: '100%',\r\n                      height: '100%',\r\n                      borderRadius: '5px'\r\n                    }}\r\n                    alt=''\r\n                  />\r\n                  <div\r\n                    style={{\r\n                      color: '#888',\r\n                      fontSize: '14px',\r\n                      marginTop: '12px'\r\n                    }}\r\n                  >\r\n                    <span>{item.updateFrequency}</span>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(ranking)\r\n","import request from '../utils/request';\r\n\r\nfunction getRanking() {\r\n    return request({\r\n        method: 'get',\r\n        url: '/toplist'\r\n    });\r\n}\r\n\r\nexport {\r\n    getRanking\r\n}","import React from 'react';\r\nimport TopBar from './components/topBar';\r\nimport './index.scss';\r\nimport { Tabs, WhiteSpace } from 'antd-mobile';\r\nimport Recommend from './components/recommend';\r\nimport Singer from './components/singer';\r\nimport Ranking from './components/ranking';\r\n\r\nconst tabs = [\r\n    { title: '推荐', sub: '1' },\r\n    { title: '歌手', sub: '2' },\r\n    { title: '排行榜', sub: '3' }\r\n];\r\n\r\nexport default class home extends React.Component {\r\n    state = {};\r\n    render() {\r\n        return (\r\n            <div className=\"home\">\r\n                <TopBar />\r\n                <Tabs\r\n                    tabs={tabs}\r\n                    initialPage={0}\r\n                    tabBarBackgroundColor=\"#d44439\"\r\n                    tabBarInactiveTextColor=\"#e4e4e4\"\r\n                    tabBarActiveTextColor=\"#f1f1f1\"\r\n                    swipeable={false}\r\n                >\r\n                    <div className=\"tabBox\">\r\n                        <Recommend />\r\n                    </div>\r\n                    <div\r\n                        style={{\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            height: '150px',\r\n                            backgroundColor: '#f2f3f4'\r\n                        }}\r\n                    >\r\n                        <div className=\"tabBox\">\r\n                            <Singer />\r\n                        </div>\r\n                    </div>\r\n                    <div\r\n                        style={{\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            height: '150px',\r\n                            backgroundColor: '#f2f3f4'\r\n                        }}\r\n                    >\r\n                        <div className=\"tabBox\">\r\n                            <Ranking />\r\n                        </div>\r\n                    </div>\r\n                </Tabs>\r\n                <WhiteSpace />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export const SET_MUC_DATA = 'SET_MUC_DATA'","import { createStore, applyMiddleware, compose } from 'redux';\r\n\r\nimport thunk from 'redux-thunk';\r\nimport { musicUrl } from './reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = {\r\n    musicUrl: createStore(musicUrl, composeEnhancers(applyMiddleware(thunk)))\r\n};\r\n\r\nexport default store;","import {SET_MUC_DATA} from './actionType';\r\n\r\nfunction musicUrl(data, action) {\r\n    switch (action.type) {\r\n        case SET_MUC_DATA:\r\n            return data = action.data;\r\n        default:\r\n            return data;\r\n    }\r\n}\r\n\r\nexport { musicUrl };\r\n\r\n","import {SET_MUC_DATA} from './actionType';\r\n\r\nexport const setMucData = (data) => {\r\n    return {\r\n        type:SET_MUC_DATA,\r\n        data\r\n    }\r\n}\r\n\r\nexport const addAsync = data => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(setMucData(data))\r\n        }, 2000);\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './index.css';\r\nimport { NavBar, Icon, List, Button } from 'antd-mobile';\r\nimport { getDetails } from '../../api/song_menu';\r\nimport BScroll from '@better-scroll/core';\r\nimport store from '../../redux';\r\nimport {setMucData} from '../../redux/actionCreator';\r\nconst Item = List.Item;\r\nconst Brief = Item.Brief;\r\n\r\nexport default class songMenu extends React.Component {\r\n    state = {\r\n        data: {\r\n            name: '歌单',\r\n            tracks: [],\r\n            subscribedCount: 0,\r\n            coverImgUrl:\r\n                'http://img3.imgtn.bdimg.com/it/u=1105085267,629346802&fm=26&gp=0.jpg'\r\n        },\r\n        bgStyle: {\r\n            backgroundImage:\r\n                'url(\"http://img3.imgtn.bdimg.com/it/u=1105085267,629346802&fm=26&gp=0.jpg\")'\r\n        },\r\n        show: {}\r\n    };\r\n    async componentDidMount() {\r\n        this.setState({ show: { transform: 'rotate(0deg)' } });\r\n        document.documentElement.scrollTop = 0;\r\n        try {\r\n            let res = await getDetails(this.props.match.params.id);\r\n            this.setState({ data: res.playlist }, () => {\r\n                let songMenuList = document.getElementById('songMenuList');\r\n                new BScroll(songMenuList, {\r\n                    click: true,\r\n                    bounce: {\r\n                        top: false\r\n                    }\r\n                });\r\n            });\r\n            this.setState({\r\n                bgStyle: {\r\n                    backgroundImage: `url(\"${res.playlist.coverImgUrl}\")`\r\n                }\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    // 播放音乐\r\n    play(list, index, e) {\r\n        let arr = [];\r\n        list.forEach(item => {\r\n            arr.push({\r\n                id: item.id,\r\n                name: item.name,\r\n                artId: item.ar[Math.floor(Math.random() * item.ar.length)].id,\r\n                arName: item.ar[0].name\r\n            });\r\n        });\r\n        store.musicUrl.dispatch(setMucData({ list: arr, index, even: e }))\r\n    }\r\n    render() {\r\n        return (\r\n            <div\r\n                id=\"songMenu\"\r\n                className=\"songMenu\"\r\n                ref={val => (this.songMenu = val)}\r\n                style={this.state.show}\r\n            >\r\n                <div className=\"cover\">\r\n                    <div className=\"bg\" style={this.state.bgStyle}></div>\r\n                    <div className=\"content\">\r\n                        <NavBar\r\n                            mode=\"light\"\r\n                            icon={<Icon type=\"left\" />}\r\n                            onLeftClick={() => {\r\n                                this.setState({\r\n                                    show: { transform: 'rotate(-90deg)' }\r\n                                });\r\n                                setTimeout(() => {\r\n                                    this.props.history.go(-1);\r\n                                }, 400);\r\n                            }}\r\n                            leftContent={\r\n                                <span className=\"title\">\r\n                                    {this.state.data.name}\r\n                                </span>\r\n                            }\r\n                        ></NavBar>\r\n                        <div className=\"synopsis\">\r\n                            <img src={this.state.data.coverImgUrl} alt=\"\" />\r\n                            <div>\r\n                                <div className=\"title\">\r\n                                    {this.state.data.name}\r\n                                </div>\r\n                                <div className=\"text\">\r\n                                    <img\r\n                                        src=\"http://p1.music.126.net/QWMV-Ru_6149AKe0mCBXKg==/1420569024374784.jpg\"\r\n                                        alt=\"\"\r\n                                    />\r\n                                    网易云音乐\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"praise\">\r\n                            <ul>\r\n                                <li>\r\n                                    <i className=\"iconfont icon-wodefankui\"></i>\r\n                                    <span>评论</span>\r\n                                </li>\r\n                                <li>\r\n                                    <i className=\"iconfont icon-shoucang\"></i>\r\n                                    <span>点赞</span>\r\n                                </li>\r\n                                <li>\r\n                                    <i className=\"iconfont icon-add\"></i>\r\n                                    <span>收藏</span>\r\n                                </li>\r\n                                <li>\r\n                                    <i className=\"iconfont icon-icon_threeline_fill\"></i>\r\n                                    <span>更多</span>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"songMenuList\" className=\"songMenuList\">\r\n                    <List>\r\n                        <div className=\"title\">\r\n                            <div>\r\n                                <i\r\n                                    className=\"iconfont icon-bofang\"\r\n                                    onClick={e =>\r\n                                        this.play(this.state.data.tracks, 0, e)\r\n                                    }\r\n                                ></i>\r\n                                <span>\r\n                                    播放全部\r\n                                    <span>\r\n                                        {' '}\r\n                                        (共{this.state.data.tracks.length}\r\n                                        首)\r\n                                    </span>\r\n                                </span>\r\n                            </div>\r\n                            <Button>\r\n                                <i className=\"iconfont icon-add\"></i> 收藏\r\n                                <span className=\"num\">\r\n                                    (\r\n                                    {Math.ceil(\r\n                                        this.state.data.subscribedCount / 1000\r\n                                    ) / 10}\r\n                                    万)\r\n                                </span>\r\n                            </Button>\r\n                        </div>\r\n                        {this.state.data.tracks.map((item, index) => {\r\n                            return (\r\n                                <div className=\"box\" key={index}>\r\n                                    <span className=\"index\">{index + 1}</span>\r\n                                    <Item\r\n                                        multipleLine\r\n                                        onClick={e =>\r\n                                            this.play(\r\n                                                this.state.data.tracks,\r\n                                                index,\r\n                                                e\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        {item.name}{' '}\r\n                                        <Brief>{item.ar[0].name}</Brief>\r\n                                    </Item>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </List>\r\n\r\n                    {this.state.data.tracks.length === 0 && (\r\n                        <Icon type=\"loading\" />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './index.scss';\r\nimport { Icon, Button, List } from 'antd-mobile';\r\nimport { getSongList } from '../../api/singer';\r\nimport BScroll from '@better-scroll/core';\r\nimport store from '../../redux';\r\nimport {setMucData} from '../../redux/actionCreator';\r\nconst Item = List.Item;\r\nconst Brief = Item.Brief;\r\n\r\nexport default class singerDetails extends React.Component {\r\n    state = {\r\n        songList: {\r\n            artist: {\r\n                picUrl:\r\n                    'http://img3.imgtn.bdimg.com/it/u=1105085267,629346802&fm=26&gp=0.jpg',\r\n                name: '歌单'\r\n            },\r\n            hotSongs: []\r\n        },\r\n        show: {}\r\n    };\r\n    componentDidMount() {\r\n        this.getSongList();\r\n        setTimeout(() => {\r\n            this.setState({ show: { transform: 'rotate(0deg)' } });\r\n        }, 0);\r\n    }\r\n    async getSongList() {\r\n        try {\r\n            let res = await getSongList({\r\n                id: this.props.match.params.id\r\n            });\r\n            this.setState({ songList: res }, () => {\r\n                let songMenuList = document.getElementById('songMenuList');\r\n                new BScroll(songMenuList, {\r\n                    click: true,\r\n                    bounce: {\r\n                        top: false\r\n                    }\r\n                });\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    // 播放音乐\r\n    play(list,index,e){\r\n        let arr = [];\r\n        list.forEach((item) => {\r\n            arr.push({\r\n                id:item.id,\r\n                name:item.name, \r\n                artId:item.ar[Math.floor(Math.random()*item.ar.length)].id,\r\n                arName:item.ar[0].name\r\n            });\r\n        });\r\n        store.musicUrl.dispatch(setMucData({ list: arr, index, even: e }))\r\n    }\r\n    render() {\r\n        return (\r\n            <div\r\n                id=\"singerDetails\"\r\n                className=\"singerDetails\"\r\n                style={this.state.show}\r\n            >\r\n                <div\r\n                    className=\"cover\"\r\n                    style={{\r\n                        backgroundImage: `url(${this.state.songList.artist.picUrl})`\r\n                    }}\r\n                >\r\n                    <Button className=\"btn\" inline type=\"warning\">\r\n                        <i className=\"iconfont icon-add\"> 收藏</i>\r\n                    </Button>\r\n                </div>\r\n                <div id=\"songMenuList\" className=\"songMenuList\">\r\n                    <List>\r\n                        <div className=\"title\">\r\n                            <div>\r\n                                <i className=\"iconfont icon-bofang\" onClick={(e) => this.play(this.state.songList.hotSongs,0,e)}></i>\r\n                                <span>\r\n                                    播放全部\r\n                                    <span>\r\n                                        {this.state.songList.hotSongs &&\r\n                                            `(共${this.state.songList.hotSongs.length}首)`}\r\n                                    </span>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        {this.state.songList.hotSongs.map((item, index) => {\r\n                            return (\r\n                                <div className=\"box\" key={index}>\r\n                                    <span className=\"index\">{index + 1}</span>\r\n                                    <Item multipleLine onClick={(e) => this.play(this.state.songList.hotSongs,index,e)}>\r\n                                        {item.name}\r\n                                        <Brief>\r\n                                            {item.ar[0].name} - {item.name}\r\n                                        </Brief>\r\n                                    </Item>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </List>\r\n\r\n                    {this.state.songList.hotSongs.length === 0 && (\r\n                        <Icon type=\"loading\" />\r\n                    )}\r\n                </div>\r\n\r\n                <div className=\"top\">\r\n                    <Icon\r\n                        type=\"left\"\r\n                        onClick={() => {\r\n                            this.setState({\r\n                                show: { transform: 'rotate(-90deg)' }\r\n                            });\r\n                            setTimeout(() => {\r\n                                this.props.history.go(-1);\r\n                            }, 400);\r\n                        }}\r\n                    />\r\n                    {this.state.songList.artist.name}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import request from '../utils/request';\r\n\r\nfunction getMusicUrl(id) {\r\n    return request({\r\n        method: 'get',\r\n        url: '/song/url',\r\n        params:{\r\n            id\r\n        }\r\n    });\r\n}\r\nfunction getMusicLyc(id) {\r\n    return request({\r\n        method: 'get',\r\n        url: '/lyric',\r\n        params:{\r\n            id\r\n        }\r\n    });\r\n}\r\n\r\nexport {\r\n    getMusicUrl,\r\n    getMusicLyc,\r\n\r\n}","function myToast(msg, tiem = 3000, type) {\r\n    let popup = document.createElement('div');\r\n    popup.innerText = msg;\r\n    document.body.append(popup);\r\n    popup.style.position = 'fixed';\r\n    popup.style.opacity = 0;\r\n    popup.style.left = '50%';\r\n    popup.style.textAlign='center';\r\n    switch (type) {\r\n        case 'top':\r\n            popup.style.top = '-5%';\r\n            popup.style.transform = 'translateX(-50%)';\r\n            setTimeout(() => {\r\n                popup.style.top = '2%';\r\n            }, 0);\r\n            break;\r\n        case 'bottom':\r\n            popup.style.top = '110%';\r\n            popup.style.transform = 'translateX(-50%)';\r\n            setTimeout(() => {\r\n                popup.style.top = '90%';\r\n            }, 0);\r\n            break;\r\n        default:\r\n            popup.style.top = '50%';\r\n            popup.style.transform = 'translateX(-50%) translateY(-50%)';\r\n            break;\r\n    }\r\n    popup.style.zIndex = 99999999999;\r\n    popup.style.transition = 'all .5s';\r\n    popup.style.padding = '8px 10px';\r\n    popup.style.backgroundColor = 'rgba(0,0,0,.7)';\r\n    popup.style.color = '#fff';\r\n    popup.style.borderRadius = '5px';\r\n    setTimeout(() => {\r\n        popup.style.opacity = 1;\r\n    }, 0);\r\n    setTimeout(() => {\r\n        popup.style.opacity = 0;\r\n    }, tiem);\r\n    setTimeout(() => {\r\n        document.body.removeChild(popup);\r\n    }, tiem + 500);\r\n}\r\nexport default myToast;\r\n","import React from 'react';\r\nimport './index.scss';\r\nimport { List, Icon, Modal } from 'antd-mobile';\r\nimport { getMusicUrl, getMusicLyc } from '../../api/music';\r\nimport { getSingerDesc } from '../../api/singer';\r\nimport BScroll from '@better-scroll/core';\r\nimport { playAnimation } from '../../utils/playAnimation';\r\nimport store from '../../redux';\r\nimport myToast from '../../utils/myToast';\r\n\r\nconst Item = List.Item;\r\nconst Brief = Item.Brief;\r\n\r\nexport default class playMusic extends React.Component {\r\n    state = {\r\n        isPlay: false,\r\n        musicUrl: '',\r\n        show: 0,\r\n        musicList: [],\r\n        index: 0,\r\n        picUrl: '',\r\n        musicName: '',\r\n        musicAr: '',\r\n        playLength: {\r\n            current: 0,\r\n            end: 0\r\n        },\r\n        platPattern: 'listCycle',\r\n        lycArr: null,\r\n        currentLyric: null,\r\n        isShowLyc: false,\r\n        popupShow: false,\r\n        isTouchDown: false\r\n    };\r\n    componentDidMount() {\r\n        window.addEventListener('touchmove', event => {\r\n            if (!this.state.isTouchDown) {\r\n                return;\r\n            }\r\n            var x =\r\n                event.changedTouches[0].clientX - this.progressBox.offsetLeft;\r\n            this.setProgress(x);\r\n        });\r\n        store.musicUrl.subscribe(() => {\r\n            let data = store.musicUrl.getState();\r\n            playAnimation(data.even);\r\n            this.setState({ musicList: data.list }, () => {\r\n                this.setState({ index: data.index }, () => {\r\n                    this.setMusicUrl();\r\n                });\r\n            });\r\n        })\r\n    }\r\n    //把歌词文本处理成合适的数组\r\n    lyricDispose(lyric) {\r\n        let arr = lyric.split('\\n'); //把歌词用/n分割成数组\r\n        let lyricArr = [];\r\n        for (let i = 0; i < arr.length; i++) {\r\n            if (!arr[i]) break;\r\n            let timeStr = arr[i].match(/\\[.*\\]/g)[0]; //获取时间字符串\r\n            timeStr = timeStr.substring(1, timeStr.length - 1);\r\n            let str = arr[i].replace(/\\[.*\\]/g, ''); //截取歌词字符串\r\n            let timeArr = timeStr.split(']['); //截取时间字符串,并且把同一项的多个时间分割成数组\r\n            for (let j = 0; j < timeArr.length; j++) {\r\n                //遍历时间数组\r\n                lyricArr.push({\r\n                    time:\r\n                        Number(timeArr[j].split(':')[1]) +\r\n                        Number(timeArr[j].split(':')[0]) * 60,\r\n                    str\r\n                }); //把每一个时间和对应的歌词push到数组中\r\n            }\r\n        }\r\n        return lyricArr.sort((a, b) => {\r\n            return a.time - b.time;\r\n        }); //把数组按照时间大小排序并返回\r\n    }\r\n    //设置音乐url\r\n    async setMusicUrl() {\r\n        this.setState({ musicUrl: '' })\r\n        this.progress.style.width = '';\r\n        try {\r\n            var res = await getMusicUrl(\r\n                this.state.musicList[this.state.index].id\r\n            );\r\n            if (res.data[0].url === null) {\r\n                myToast(`歌曲《${this.state.musicList[this.state.index].name}》暂无版权,播放失败!`, 2000)\r\n                this.MusicChange(1)\r\n            }\r\n            this.setState({ musicUrl: res.data[0].url }, () => {\r\n                if (this.state.show === 0) {\r\n                    this.setState({ show: 60 });\r\n                }\r\n            });\r\n            this.getSingerDesc(this.state.musicList[this.state.index].artId);\r\n            this.setState({\r\n                musicName: this.state.musicList[this.state.index].name\r\n            });\r\n            this.setState({\r\n                musicAr: this.state.musicList[this.state.index].arName\r\n            });\r\n            let lyc = await getMusicLyc(\r\n                this.state.musicList[this.state.index].id\r\n            );\r\n            if ('lrc' in lyc) {\r\n                this.setState({ lycArr: this.lyricDispose(lyc.lrc.lyric) });\r\n            } else {\r\n                this.setState({ lycArr: '' });\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    // 点击播放或暂停按钮\r\n    Playing(_this) {\r\n        let audio = document.getElementById('audio');\r\n        if (_this.state.isPlay) {\r\n            audio.pause();\r\n        } else {\r\n            audio.play();\r\n        }\r\n    }\r\n    // 显示详细播放模块\r\n    showAll(_this) {\r\n        _this.setState({ show: '100%' });\r\n        let tool = document.getElementsByClassName('tool')[0];\r\n        tool.style.display = 'none';\r\n    }\r\n    // 隐藏详细播放模块\r\n    unShowAll(_this) {\r\n        _this.setState({ show: 60 });\r\n        let tool = document.getElementsByClassName('tool')[0];\r\n        tool.style.display = 'flex';\r\n        tool.style.opacity = 0;\r\n        setTimeout(() => {\r\n            tool.style.opacity = 1;\r\n        }, 0);\r\n    }\r\n    //当音乐播放时\r\n    timeupdate(_this) {\r\n        let audio = document.getElementById('audio');\r\n        // 是否播放结束\r\n        if (audio.ended && this.state.platPattern !== 'singleCycle') {\r\n            this.MusicChange(1);\r\n            return;\r\n        }\r\n        let currentTime = '0:00';\r\n        let duration = '0:00';\r\n        if (audio.currentTime > 0) {\r\n            currentTime = Math.floor(audio.currentTime);\r\n            let m = Math.floor(currentTime / 60).toString();\r\n            let s = (currentTime % 60).toString();\r\n            currentTime = `${m}:${s.padStart(2, '0')}`;\r\n        }\r\n        if (audio.duration > 0) {\r\n            duration = Math.floor(audio.duration);\r\n            let m = Math.floor(duration / 60).toString();\r\n            let s = (duration % 60).toString();\r\n            duration = `${m}:${s.padStart(2, '0')}`;\r\n        }\r\n        _this.setState({\r\n            playLength: {\r\n                current: currentTime,\r\n                end: duration\r\n            }\r\n        });\r\n        if (!this.state.isTouchDown) {\r\n            let percentage = audio.currentTime / audio.duration;\r\n            this.progress.style.width =\r\n                percentage * this.progressBox.offsetWidth + 'px';\r\n        }\r\n        if (this.state.lycArr) {\r\n            // 调整歌词显示\r\n            let current = audio.currentTime + 0.3; //获取当前播放时间\r\n            for (let i = this.state.lycArr.length - 1; i >= 0; i--) {\r\n                //倒序遍历歌词数组\r\n                if (this.state.lycArr[i].time < current) {\r\n                    if (this.state.currentLyric !== i) {\r\n                        //数组下标i的时间小于当前时间时,设置当前显示的歌词为歌词数组的下标i\r\n                        this.lycBrief.innerText = this.state.lycArr[i].str;\r\n                        this.allLyc.style.top = -i * 50 + 'px';\r\n                    }\r\n                    this.setState({ currentLyric: i }); //设置当前显示的歌词下标\r\n                    return; //退出循环\r\n                }\r\n            }\r\n            // 如果上面循环未有结果,设置当前显示歌词为空,歌词滚动到初始位置\r\n            this.setState({ currentLyric: null });\r\n            this.allLyc.style.top = '50px';\r\n        }\r\n    }\r\n    // 获取歌手详情设置专辑封面\r\n    async getSingerDesc(id) {\r\n        try {\r\n            let res = await getSingerDesc(id);\r\n            this.setState({\r\n                picUrl: res.artist.picUrl\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    //单首音乐播放完毕\r\n    MusicChange(index) {\r\n        var _index = null;\r\n        switch (this.state.platPattern) {\r\n            case 'listCycle':\r\n            case 'singleCycle': {\r\n                if (index === 1) {\r\n                    if (this.state.index !== this.state.musicList.length - 1) {\r\n                        _index = this.state.index + 1;\r\n                    } else {\r\n                        _index = 0;\r\n                    }\r\n                }\r\n                if (index === -1) {\r\n                    if (this.state.index !== 0) {\r\n                        _index = this.state.index - 1;\r\n                    } else {\r\n                        _index = this.state.musicList.length - 1;\r\n                    }\r\n                }\r\n                this.setState({ index: _index }, () => {\r\n                    this.setMusicUrl();\r\n                });\r\n                break;\r\n            }\r\n            case 'random': {\r\n                _index = Math.floor(\r\n                    Math.random() * this.state.musicList.length\r\n                );\r\n                this.setState({ index: _index }, () => {\r\n                    this.setMusicUrl();\r\n                });\r\n                break;\r\n            }\r\n            default: {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    // 显示音乐列表弹出层\r\n    showPopup() {\r\n        this.setState(\r\n            {\r\n                popupShow: !this.state.popupShow\r\n            },\r\n            () => {\r\n                new BScroll(this.popupBox, {\r\n                    click: true,\r\n                    startY: -this.state.index * 40\r\n                });\r\n            }\r\n        );\r\n    }\r\n    // 点击进度条\r\n    progressClick(e) {\r\n        this.setProgress(e.clientX - this.progressBox.offsetLeft);\r\n        this.setMucTiem();\r\n    }\r\n    setProgress(x) {\r\n        this.progress.style.width = x + 'px';\r\n    }\r\n    setMucTiem() {\r\n        if (!this.state.isPlay) {\r\n            return\r\n        }\r\n        let percentage =\r\n            this.progress.offsetWidth / this.progressBox.offsetWidth;\r\n        if (percentage < 0.04) {\r\n            percentage = 0;\r\n        }\r\n        this.audio.currentTime = this.audio.duration * percentage;\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"playMusic\" style={{ bottom: this.state.show }}>\r\n                <div className=\"bg\">\r\n                    <div\r\n                        className=\"before\"\r\n                        style={{ backgroundImage: `url(${this.state.picUrl})` }}\r\n                    ></div>\r\n                </div>\r\n                <div className=\"tool\">\r\n                    <Item\r\n                        thumb={this.state.picUrl}\r\n                        onClick={() => this.showAll(this)}\r\n                        ref={val => (this.img = val)}\r\n                    >\r\n                        {this.state.musicName}{' '}\r\n                        <Brief>{this.state.musicAr}</Brief>\r\n                    </Item>\r\n                    <div className=\"btn\">\r\n                        <i\r\n                            onClick={() => this.Playing(this)}\r\n                            className={\r\n                                this.state.isPlay\r\n                                    ? 'iconfont icon-zanting'\r\n                                    : 'iconfont icon-bofang'\r\n                            }\r\n                        />\r\n                        <i\r\n                            className=\"iconfont icon-yinleliebiao\"\r\n                            onClick={() => this.showPopup()}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"all\">\r\n                    <Icon type=\"down\" onClick={() => this.unShowAll(this)} />\r\n                    <div className=\"title\">{this.state.musicName}</div>\r\n                    <div className=\"singer\">{this.state.musicAr}</div>\r\n                    <div\r\n                        className=\"lycBox\"\r\n                        onClick={() =>\r\n                            this.setState({ isShowLyc: !this.state.isShowLyc })\r\n                        }\r\n                    >\r\n                        <div\r\n                            className=\"plate\"\r\n                            style={{\r\n                                width: window.screen.width * 0.8,\r\n                                height: window.screen.width * 0.8,\r\n                                opacity: this.state.isShowLyc ? 0 : 1\r\n                            }}\r\n                            ref={val => (this.plate = val)}\r\n                        >\r\n                            <img src={this.state.picUrl} alt=\"\" />\r\n                        </div>\r\n                        <div\r\n                            className=\"lycBrief\"\r\n                            style={{ opacity: this.state.isShowLyc ? 0 : 1 }}\r\n                        >\r\n                            <p ref={val => (this.lycBrief = val)}></p>\r\n                        </div>\r\n                        <div\r\n                            className=\"allLyc\"\r\n                            style={{ opacity: this.state.isShowLyc ? 1 : 0 }}\r\n                            ref={val => (this.allLyc = val)}\r\n                        >\r\n                            {this.state.lycArr &&\r\n                                this.state.lycArr.map((item, index) => {\r\n                                    return (\r\n                                        <p\r\n                                            key={index}\r\n                                            className={\r\n                                                index ===\r\n                                                    this.state.currentLyric\r\n                                                    ? 'current'\r\n                                                    : ''\r\n                                            }\r\n                                        >\r\n                                            {item.str}\r\n                                        </p>\r\n                                    );\r\n                                })}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"allTool\">\r\n                        <div className=\"progressBar\">\r\n                            <span>{this.state.playLength.current}</span>\r\n                            <div\r\n                                className=\"progressBox\"\r\n                                onTouchStart={() =>\r\n                                    this.setState({ isTouchDown: true })\r\n                                }\r\n                                onTouchEnd={() => {\r\n                                    this.setState({ isTouchDown: false });\r\n                                    setTimeout(() => {\r\n                                        this.setMucTiem();\r\n                                    }, 0);\r\n                                }}\r\n                                onClick={e => this.progressClick(e)}\r\n                            >\r\n                                <div ref={val => (this.progressBox = val)}>\r\n                                    <div\r\n                                        className=\"progress\"\r\n                                        ref={val => (this.progress = val)}\r\n                                    ></div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"audio\">\r\n                                <audio\r\n                                    autoPlay\r\n                                    onTimeUpdate={() => this.timeupdate(this)}\r\n                                    controls\r\n                                    src={this.state.musicUrl}\r\n                                    onPlaying={() => {\r\n                                        this.setState({ isPlay: true });\r\n                                    }}\r\n                                    onPause={() => {\r\n                                        this.setState({ isPlay: false });\r\n                                    }}\r\n                                    id=\"audio\"\r\n                                    loop={\r\n                                        this.state.platPattern === 'singleCycle'\r\n                                    }\r\n                                    ref={val => (this.audio = val)}\r\n                                />\r\n                            </div>\r\n                            <span>{this.state.playLength.end}</span>\r\n                        </div>\r\n                        <div className=\"control\">\r\n                            {this.state.platPattern === 'listCycle' && (\r\n                                <i\r\n                                    className=\"iconfont icon-icon--\"\r\n                                    onClick={() => {\r\n                                        this.setState({\r\n                                            platPattern: 'singleCycle'\r\n                                        });\r\n                                        myToast('单曲循环', 2000)\r\n                                    }}\r\n                                />\r\n                            )}\r\n                            {this.state.platPattern === 'singleCycle' && (\r\n                                <i\r\n                                    className=\"iconfont icon-danquxunhuan\"\r\n                                    onClick={() => {\r\n                                        this.setState({\r\n                                            platPattern: 'random'\r\n                                        });\r\n                                        myToast('随机播放', 2000)\r\n                                    }}\r\n                                />\r\n                            )}\r\n                            {this.state.platPattern === 'random' && (\r\n                                <i\r\n                                    className=\"iconfont icon-suijibofang\"\r\n                                    onClick={() => {\r\n                                        this.setState({\r\n                                            platPattern: 'listCycle'\r\n                                        });\r\n                                        myToast('顺序播放', 2000)\r\n                                    }}\r\n                                />\r\n                            )}\r\n                            <i\r\n                                className=\"iconfont icon-shangyishoushangyige\"\r\n                                onClick={() => this.MusicChange(-1)}\r\n                            />\r\n                            <i\r\n                                onClick={() => this.Playing(this)}\r\n                                className={\r\n                                    this.state.isPlay\r\n                                        ? 'iconfont icon-zanting'\r\n                                        : 'iconfont icon-bofang'\r\n                                }\r\n                            />\r\n                            <i\r\n                                className=\"iconfont icon-xiayigexiayishou\"\r\n                                onClick={() => this.MusicChange(1)}\r\n                            />\r\n                            <i\r\n                                className=\"iconfont icon-yinleliebiao\"\r\n                                onClick={() => this.showPopup()}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Modal\r\n                    popup\r\n                    visible={this.state.popupShow}\r\n                    onClose={() => this.showPopup()}\r\n                    animationType=\"slide-up\"\r\n                >\r\n                    <div className=\"songListPopup\">\r\n                        <List\r\n                            renderHeader={() => (\r\n                                <div className=\"title\">\r\n                                    <div className=\"left\">\r\n                                        {this.state.platPattern ===\r\n                                            'listCycle' && (\r\n                                                <>\r\n                                                    <i\r\n                                                        className=\"iconfont icon-icon--\"\r\n                                                        onClick={() => {\r\n                                                            this.setState({\r\n                                                                platPattern:\r\n                                                                    'singleCycle'\r\n                                                            });\r\n                                                        }}\r\n                                                    />\r\n                                                    顺序播放\r\n                                            </>\r\n                                            )}\r\n                                        {this.state.platPattern ===\r\n                                            'singleCycle' && (\r\n                                                <>\r\n                                                    <i\r\n                                                        className=\"iconfont icon-danquxunhuan\"\r\n                                                        onClick={() => {\r\n                                                            this.setState({\r\n                                                                platPattern:\r\n                                                                    'random'\r\n                                                            });\r\n                                                        }}\r\n                                                    />\r\n                                                    单曲循环\r\n                                            </>\r\n                                            )}\r\n                                        {this.state.platPattern ===\r\n                                            'random' && (\r\n                                                <>\r\n                                                    <i\r\n                                                        className=\"iconfont icon-suijibofang\"\r\n                                                        onClick={() => {\r\n                                                            this.setState({\r\n                                                                platPattern:\r\n                                                                    'listCycle'\r\n                                                            });\r\n                                                        }}\r\n                                                    />\r\n                                                    随机播放\r\n                                            </>\r\n                                            )}\r\n                                    </div>\r\n                                    <i\r\n                                        className=\"iconfont icon-guanbi\"\r\n                                        onClick={() => this.showPopup()}\r\n                                    />\r\n                                </div>\r\n                            )}\r\n                            className=\"popup-list\"\r\n                        >\r\n                            <div\r\n                                className=\"box\"\r\n                                ref={val => (this.popupBox = val)}\r\n                            >\r\n                                <div>\r\n                                    {this.state.musicList.map((item, index) => (\r\n                                        <Item\r\n                                            key={index}\r\n                                            onClick={() => this.setState({ index }, () => {\r\n                                                this.setMusicUrl();\r\n                                            })}\r\n                                        >\r\n                                            <span style={{ color: this.state.index === index ? \"#d4473e\" : \"#a09191\" }}>\r\n                                                <i\r\n                                                    className=\"iconfont icon-bofang\"\r\n                                                    style={{\r\n                                                        opacity:\r\n                                                            this.state.index ===\r\n                                                                index\r\n                                                                ? 1\r\n                                                                : 0\r\n                                                    }}\r\n                                                />\r\n                                                {item.name} - {item.arName}\r\n                                            </span>\r\n                                            <div className=\"ico\">\r\n                                                <i className=\"iconfont icon-shoucang\" />\r\n                                                <i className=\"iconfont icon-RectangleCopy\" />\r\n                                            </div>\r\n                                        </Item>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        </List>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","function playAnimation(e) {\r\n    let root = document.getElementById('root');\r\n    let ico = document.createElement('i');\r\n    ico.className = 'iconfont icon-yinle animation';\r\n    ico.style.top = e.pageY - 5 + 'px';\r\n    ico.style.left = e.pageX - 5 + 'px';\r\n    root.append(ico);\r\n    setTimeout(() => {\r\n        ico.style.top = window.screen.height - 45 + 'px';\r\n        ico.style.left = '8%';\r\n        ico.style.fontSize = '30px'\r\n    }, 0);\r\n    setTimeout(() => {\r\n        ico.style.opacity = 0;\r\n    },1000)\r\n    setTimeout(() => {\r\n        root.removeChild(ico);\r\n    }, 2000);\r\n}\r\n\r\nexport { playAnimation };\r\n","import React from 'react';\r\nimport './index.scss';\r\nimport { searchMusic, getSearchHot } from '../../api/search';\r\nimport { getSingerDesc } from '../../api/singer';\r\nimport { getPlaylist } from '../../api/song_menu';\r\nimport { List, Tag } from 'antd-mobile';\r\nimport BScroll from '@better-scroll/core';\r\nimport store from '../../redux';\r\nimport { setMucData } from '../../redux/actionCreator';\r\nconst Item = List.Item;\r\nconst Brief = Item.Brief;\r\nlet tiemId = null;\r\n\r\nexport default class search extends React.Component {\r\n    state = {\r\n        boxStyle: {},\r\n        key: '',\r\n        searchList: [],\r\n        singerData: {},\r\n        playlists: [],\r\n        searchHot: []\r\n    };\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n            this.setState({\r\n                boxStyle: {\r\n                    transform: 'translateX(0)'\r\n                }\r\n            });\r\n        }, 0);\r\n        let input = document.getElementById('input');\r\n        input.focus();\r\n        new BScroll(this.search, {\r\n            click: true\r\n        });\r\n        setTimeout(() => {\r\n            this.search.style.backgroundColor = '#f3f3f4';\r\n        }, 300);\r\n        this.getSearchHot();\r\n    }\r\n    // 获取搜索热词\r\n    async getSearchHot() {\r\n        try {\r\n            let res = await getSearchHot();\r\n            this.setState({ searchHot: res.result.hots });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    // 当搜索框值改变时\r\n    onChange() {\r\n        if (tiemId) {\r\n            clearInterval(tiemId);\r\n        }\r\n        tiemId = setTimeout(() => {\r\n            clearInterval(tiemId);\r\n            if (this.input.value.trim().length > 0) {\r\n                this.setState({ key: this.input.value }, () => {\r\n                    this.searchMusic(this.state.key);\r\n                });\r\n            } else {\r\n                this.setState({ searchList: [] });\r\n            }\r\n            this.box.style.transform = 'translateY(0)';\r\n        }, 500);\r\n    }\r\n    // 获取搜索内容\r\n    async searchMusic(key) {\r\n        try {\r\n            let res = await searchMusic(key);\r\n            this.getPlaylist(res.result.songs[0].id);\r\n            this.getSingerDesc(res.result.songs[0].artists[0].id);\r\n            this.setState({ searchList: res.result.songs });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    // 获取歌手详情\r\n    async getSingerDesc(id) {\r\n        try {\r\n            let res = await getSingerDesc(id);\r\n            this.setState({ singerData: res.artist });\r\n            return res.artist;\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    // 获取相似歌单\r\n    async getPlaylist(id) {\r\n        try {\r\n            let res = await getPlaylist(id);\r\n            this.setState({ playlists: res.playlists });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    // 播放歌曲\r\n    play(list, index,e) {\r\n        try {\r\n            let arr = [];\r\n            list.forEach((item, _index) => {\r\n                arr.push({\r\n                    id: item.id,\r\n                    name: item.name,\r\n                    arName: item.artists[0].name,\r\n                    artId:\r\n                        item.artists[\r\n                            Math.floor(Math.random() * item.artists.length)\r\n                        ].id\r\n                });\r\n            });\r\n            store.musicUrl.dispatch(setMucData({ list: arr, index, even: e }));\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"search\" ref={val => (this.search = val)}>\r\n                <div\r\n                    className=\"box\"\r\n                    ref={val => (this.box = val)}\r\n                    style={this.state.boxStyle}\r\n                >\r\n                    {this.state.searchList.length > 0 && (\r\n                        <div className=\"content\">\r\n                            <div className=\"singer\">\r\n                                <div className=\"title\">相关歌手</div>\r\n                                <Item\r\n                                    thumb={this.state.singerData.picUrl}\r\n                                    onClick={() => {\r\n                                        this.props.history.push(\r\n                                            `/singerDetails/${this.state.singerData.id}`\r\n                                        );\r\n                                    }}\r\n                                >\r\n                                    {this.state.singerData.name}\r\n                                </Item>\r\n                            </div>\r\n                            <div className=\"songMenuList\">\r\n                                <div className=\"title\">相关歌单</div>\r\n                                <List>\r\n                                    {this.state.playlists.map((item, index) => {\r\n                                        return (\r\n                                            <Item\r\n                                                key={index}\r\n                                                thumb={item.coverImgUrl}\r\n                                                onClick={() => {\r\n                                                    this.props.history.push(\r\n                                                        '/songMenu/' + item.id\r\n                                                    );\r\n                                                }}\r\n                                            >\r\n                                                {item.name}\r\n                                            </Item>\r\n                                        );\r\n                                    })}\r\n                                </List>\r\n                            </div>\r\n                            <div className=\"songList\">\r\n                                <List>\r\n                                    {this.state.searchList.map(\r\n                                        (item, index) => {\r\n                                            return (\r\n                                                <Item\r\n                                                    onClick={(e) =>\r\n                                                        this.play(\r\n                                                            this.state\r\n                                                                .searchList,\r\n                                                            index,\r\n                                                            e\r\n                                                        )\r\n                                                    }\r\n                                                    key={index}\r\n                                                >\r\n                                                    {item.name}\r\n                                                    <Brief>\r\n                                                        {item.artists[0].name} -{' '}\r\n                                                        {item.album.name}\r\n                                                    </Brief>\r\n                                                </Item>\r\n                                            );\r\n                                        }\r\n                                    )}\r\n                                </List>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {this.state.searchList.length === 0 && (\r\n                        <div className=\"hotKey\">\r\n                            <div className=\"title\">热门搜索</div>\r\n                            <div className=\"content\">\r\n                                {this.state.searchHot.map((item, index) => {\r\n                                    return (\r\n                                        <Tag data-seed=\"logId\" key={index}>\r\n                                            <div\r\n                                                onClick={() => {\r\n                                                    this.searchMusic(\r\n                                                        item.first\r\n                                                    );\r\n                                                    this.input.value =\r\n                                                        item.first;\r\n                                                    this.setState({\r\n                                                        key: item.first\r\n                                                    });\r\n                                                }}\r\n                                            >\r\n                                                {item.first}\r\n                                            </div>\r\n                                        </Tag>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                {/* 搜索条 */}\r\n                <div className=\"searchBar\" style={this.state.boxStyle}>\r\n                    <i\r\n                        className=\"iconfont icon-xiangzuojiantou\"\r\n                        onClick={() => {\r\n                            this.search.style.backgroundColor = '';\r\n                            this.setState({\r\n                                boxStyle: { transform: 'translateX(100%)' }\r\n                            });\r\n                            setTimeout(() => {\r\n                                this.props.history.go(-1);\r\n                            }, 300);\r\n                        }}\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"input\"\r\n                        placeholder=\"搜索歌曲、歌手、专辑\"\r\n                        ref={val => (this.input = val)}\r\n                        onChange={() => this.onChange()}\r\n                    />\r\n                    {this.state.key.trim().length > 0 && (\r\n                        <i\r\n                            className=\"iconfont icon-guanbi\"\r\n                            onClick={() => {\r\n                                this.input.value = '';\r\n                                this.setState({ key: '' });\r\n                                this.setState({ searchList: [] });\r\n                            }}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import request from '../utils/request';\r\n\r\nfunction searchMusic(keywords) {\r\n    return request({\r\n        method: 'get',\r\n        url: '/search',\r\n        params:{\r\n            keywords\r\n        }\r\n    });\r\n}\r\n\r\n\r\nfunction getSearchHot() {\r\n    return request({\r\n        method: 'get',\r\n        url: '/search/hot'\r\n    });\r\n}\r\n\r\nexport {\r\n    getSearchHot,\r\n    searchMusic\r\n}","import React from 'react'\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport Home from './view/home'\r\nimport SongMenu from './view/songMenu'\r\nimport SingerDetails from './view/singerDetails'\r\nimport PlayMusic from './view/playMusic'\r\nimport Search from './view/search'\r\nimport './APP.scss'\r\n\r\nexport default class App extends React.Component {\r\n  state = {\r\n    isPC: null\r\n  }\r\n  componentDidMount() {\r\n    if (!/Android|webOS|iPhone|iPod|BlackBerry/i.test(navigator.userAgent)) {\r\n      this.setState({ isPC: 'pc' })\r\n    }\r\n    window.addEventListener('resize', () => {\r\n      setTimeout(() => {\r\n        if (/Android|webOS|iPhone|iPod|BlackBerry/i.test(navigator.userAgent)) {\r\n          if (this.state.isPC === 'pc') {\r\n            window.location.reload()\r\n          }\r\n        }\r\n      }, 1000)\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='box'>\r\n            <Router>\r\n              <Route path='/' component={Home} />\r\n              <Switch>\r\n                <Route path='/songMenu/:id' component={SongMenu} />\r\n                <Route path='/singerDetails/:id' component={SingerDetails} />\r\n                <Route path='/search' component={Search} />\r\n              </Switch>\r\n            </Router>\r\n            <PlayMusic />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n// antd-mobile UI\r\nimport 'antd-mobile/dist/antd-mobile.css';\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}